@merge module Apm
{
  func main(argCount: Int, argv: ptr[array[ptr[Char]]]): Int {
    if (argCount >= 3 && String.compare(argv~cnt(2), Strings.cmd_install) == 0) {
      installRelease(argv~cnt(3)~cast[ptr[array[Char]]], 1, 1);
    } else if (argCount >= 3 && String.compare(argv~cnt(2), Strings.cmd_local) == 0) {
      if (argCount >= 4 && String.compare(argv~cnt(3), Strings.cmd_install) == 0) {
        installRelease(argv~cnt(4)~cast[ptr[array[Char]]], 0, 1);
      } else {
        Console.print(Strings.use_apm_local_install, Console.Style.fgRed());
      }
    } else if(argCount >= 3 && String.compare(argv~cnt(2), Strings.cmd_help) == 0) {
      def homeDirectory: ptr[array[Char]] = System.getEnv("HOME")~cast[ptr[array[Char]]];
      def pwdDirectory: ptr[array[Char]] = System.getEnv("PWD")~cast[ptr[array[Char]]];
      Console.print(Strings.help_commands, Console.Style.fgGreen());
      Console.print(Strings.help_apm_help, Console.Style.fgYellow());
      Console.print(Strings.help_apm_help_tip, Console.Style.fgWhite());
      Console.print(Strings.help_apm_install, Console.Style.fgYellow());
      Console.print(Strings.help_apm_install_tip, Console.Style.fgWhite(), homeDirectory);
      Console.print(Strings.help_apm_install_local, Console.Style.fgYellow());
      Console.print(Strings.help_apm_install_tip, Console.Style.fgWhite(), pwdDirectory);
    } else if(argCount >= 3) {
      Console.print(Strings.unknown_command, Console.Style.fgRed(), argv~cnt(2));
    } else {
      Console.print(Strings.use_help_command, Console.Style.fgWhite());
    };

    return 0;
  };
};
