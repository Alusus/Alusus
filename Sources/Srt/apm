#!/usr/bin/env alusus
import "Apm.alusus";

@merge module Apm {
    use Srl;
    func start(argCount: Int, argv: ptr[array[ptr[Char]]]): Int {
        if (argCount >= 3 && String.compare(argv~cnt(2), "install") == 0) {
            installRelease(argv~cnt(3)~cast[ptr[array[Char]]], 1, 1);
        } else if (argCount >= 3 && String.compare(argv~cnt(2), "local") == 0) {
            if (argCount >= 4 && String.compare(argv~cnt(3), "install") == 0) {
                installRelease(argv~cnt(4)~cast[ptr[array[Char]]], 0, 1);
            } else {
                Console.print("%suse: apm local install <author>/<package>@<release>\n", Console.Style.fgRed());
            }
        } else if(argCount >= 3 && String.compare(argv~cnt(2), "help") == 0) {
            def homeDirectory: ptr[array[Char]] = System.getEnv("HOME")~cast[ptr[array[Char]]];
            def pwdDirectory: ptr[array[Char]] = System.getEnv("PWD")~cast[ptr[array[Char]]];
            Console.print(" %sCommands:- \n", Console.Style.fgGreen());
            Console.print("   %sapm help\t\t\t\t\t\t", Console.Style.fgYellow());
            Console.print("%slist of commands\n", Console.Style.fgWhite());
            Console.print("   %sapm install <author>/<package>@<release>\t\t", Console.Style.fgYellow());
            Console.print("%sinstall package in `%s/.apm`\n", Console.Style.fgWhite(), homeDirectory);
            Console.print("   %sapm local install <author>/<package>@<release>\t", Console.Style.fgYellow());
            Console.print("%sinstall package in `%s/.apm`\n", Console.Style.fgWhite(), pwdDirectory);
        } else if(argCount >= 3) {
            Console.print("%sUnknown command '%s'. Use 'apm help' for help.\n", Console.Style.fgRed(), argv~cnt(2));
        } else {
            Console.print("%sUse 'apm help' for help.\n", Console.Style.fgWhite());
        };

        return 0;
    };
};

Apm.start(Process.argCount, Process.args);