import "globals.alusus";
import "Srl/String.alusus";

@merge module Srl
{
  module Console
  {
    @expname[getchar]
    func getChar(): Int[32];
    
    @expname[putchar]
    func putChar(character: Int[32]): Int[32];

    @expname[printf] func print(format: ptr[Word[8]], args: ...any): Int[32];

    func print(i: Int[64]): Int[32] {
      return print("%lld", i);
    };

    func print(f: Float[64]): Int[32] {
      return print("%f", f);
    };

    func print(f: Float[64], d: Int): Int[32] {
      return print("%.*f", d, f);
    };

    @expname[scanf]
    func scan(format: ptr[Word[8]], args: ...any): Int[32];

    func getInt(): Int {
      def i: Int;
      i = 0;
      scan("%d", i~ptr);
      return i;
    };

    func getFloat(): Float {
      def i: Float;
      i = 0;
      scan("%f", i~ptr);
      return i;
    };

    func getString(str: ptr[array[Char]], count: Word): Void {
      def i: Word;
      def c: Char;
      i = 0;
      c = 0;
      while c != '\n' {
        c = getChar();
        if c != '\n' && i < count - 1 {
          str~cnt(i) = c;
          ++i;
        };
      };
      str~cnt(i) = 0;
    };

    module Style {
      use Srl;      
      func reset(): ptr[Char] {
          return "\x1b[0m";
      };
      
      func bright(): ptr[Char] {
          return "\x1b[1m";
      };
      
      func dim(): ptr[Char] {
          return "\x1b[2m";
      };
      
      func italic(): ptr[Char] {
          return "\x1b[3m";
      };
      
      func underscore(): ptr[Char] {
          return "\x1b[4m";
      };
      
      func blink(): ptr[Char] {
          return "\x1b[5m";
      };
      
      func reverse(): ptr[Char] {
          return "\x1b[7m";
      };
      
      func hidden(): ptr[Char] {
          return "\x1b[8m";
      };

      
      func fgBlack(): ptr[Char] {
          return "\x1b[30m";
      };
      
      func fgRed(): ptr[Char] {
          return "\x1b[31m";
      };
      
      func fgGreen(): ptr[Char] {
          return "\x1b[32m";
      };
      
      func fgYellow(): ptr[Char] {
          return "\x1b[33m";
      };
      
      func fgBlue(): ptr[Char] {
          return "\x1b[34m";
      };
      
      func fgMagenta(): ptr[Char] {
          return "\x1b[35m";
      };
      
      func fgCyan(): ptr[Char] {
          return "\x1b[36m";
      };
      
      func fgWhite(): ptr[Char] {
          return "\x1b[37m";
      };

      
      func bgBlack(): ptr[Char] {
          return "\x1b[40m";
      };
      
      func bgRed(): ptr[Char] {
          return "\x1b[41m";
      };
      
      func bgGreen(): ptr[Char] {
          return "\x1b[42m";
      };
      
      func bgYellow(): ptr[Char] {
          return "\x1b[43m";
      };
      
      func bgBlue(): ptr[Char] {
          return "\x1b[44m";
      };
      
      func bgMagenta(): ptr[Char] {
          return "\x1b[45m";
      };
      
      func bgCyan(): ptr[Char] {
          return "\x1b[46m";
      };
      
      func bgWhite(): ptr[Char] {
          return "\x1b[47m";
      };
    };
  };
};
