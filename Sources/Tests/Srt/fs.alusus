import "Srl/Console.alusus";
import "Srl/String.alusus";
import "Srl/Fs.alusus";

def Main: module
{
  def start: function () => Void
  {
    def filename: ptr[array[Char]];
    filename = "/tmp/alususfileoperationtest.txt";

    testWritingText(filename);
    testReadingText(filename);
    testWritingBinary(filename);
    testReadingBinary(filename);
    testSeek(filename);
    testCreatingEntireFile(filename);
    testOpenDir("/tmp");
  };

  def testWritingText: function (filename: ptr[array[Char]])=>Void
  {
    def file: ptr[Srl.Fs.File];
    file = Srl.Fs.openFile(filename, "w");
    Srl.Fs.print(file, "Num of days in a week: %d", 7);
    Srl.Fs.closeFile(file);
  };

  def testReadingText: function (filename: ptr[array[Char]])=>Void
  {
    def file: ptr[Srl.Fs.File];
    def buffer: array[Char, 100];
    file = Srl.Fs.openFile(filename, "r");
    Srl.Fs.scan(file, "%[^0-9]", buffer~ptr);
    Srl.Console.print(buffer(0)~ptr);
    def num: Int;
    Srl.Fs.scan(file, "%i", num~ptr);
    Srl.Console.print("%d\n", num);
    Srl.Fs.closeFile(file);
  };

  def testWritingBinary: function (filename: ptr[array[Char]])=>Void
  {
    def file: ptr[Srl.Fs.File];
    def arr: array[Int, 8];
    def i: Int;
    for i = 0, i < 8, ++i {
      arr(i) = i * i;
    };
    file = Srl.Fs.openFile(filename, "w");
    Srl.Fs.write(arr~ptr, arr(0)~size~cast[Int], 8, file);
    Srl.Fs.closeFile(file);
  };

  def testReadingBinary: function (filename: ptr[array[Char]])=>Void
  {
    def file: ptr[Srl.Fs.File];
    def newArr: array[Int, 8];
    file = Srl.Fs.openFile(filename, "r");
    Srl.Fs.read(newArr~ptr, newArr(0)~size~cast[Int], 8, file);
    Srl.Fs.closeFile(file);
    def i: Int;
    for i = 0, i < 8, ++i {
      Srl.Console.print("element %d: %d\n", i, newArr(i));
    }
  };

  def testSeek: function (filename: ptr[array[Char]])
  {
    def file: ptr[Srl.Fs.File];
    file = Srl.Fs.openFile(filename, "r");
    Srl.Fs.seek(file, 10, Srl.Fs.Seek.SET);
    def pos: Int;
    pos = Srl.Fs.tell(file);
    Srl.Console.print("%d\n", pos);
    Srl.Fs.seek(file, 10, Srl.Fs.Seek.END);
    pos = Srl.Fs.tell(file);
    Srl.Console.print("%d\n", pos);
    Srl.Fs.closeFile(file);
  };

  def testCreatingEntireFile: function (filename: ptr[array[Char]])
  {
    def content: ptr[array[Char]];
    content = "Writing an entire file in one call.\n";
    Srl.Fs.createFile(filename, content, Srl.String.getLength(content));
    def buffer: ptr[array[Char]];
    def size: Int;
    buffer = Srl.Fs.readFile(filename, size~ptr);
    Srl.Console.print("%s%d\n", buffer, size);
  };

  def testOpenDir: function (dirname: ptr[array[Char]])
  {
    def dir: ptr[Srl.Fs.Dir];
    dir = Srl.Fs.openDir(dirname);
    Srl.Fs.closeDir(dir);
  };
};

run Main.start;

