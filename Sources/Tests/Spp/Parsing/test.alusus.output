ERROR SPPG1002 @ (3,1): Invalid operation.
------------------ Parsed Data Dump ------------------
Scope [Main.Statements.StmtList]
 List [Main.Expression.ListExp]
  StringLiteral: hello [Main.Subject.Literal]
  StringLiteral: world [Main.Subject.Literal]
 PostfixOperator ++ [Main.Expression.UnaryExp]
  operand: Identifier: i [Main.Subject.Identifier]
------------------------------------------------------
------------------ Parsed Data Dump ------------------
UserType [Main.Type]
 body: Block [Main.BlockStatements.StmtList]
  Definition [Main.Def] x: Identifier: float [Main.Subject.Identifier]
  Definition [Main.Def] y: Identifier: float [Main.Subject.Identifier]
------------------------------------------------------
------------------ Parsed Data Dump ------------------
UserType [Main.Type]
 body: Block [Main.BlockStatements.StmtList]
  Definition [Main.Def] x: Identifier: float [Main.Subject.Identifier]
  Definition [Main.Def] y: Identifier: float [Main.Subject.Identifier]
------------------------------------------------------
------------------ Parsed Data Dump ------------------
Function  [Main.Function]
 type: FunctionType shared: 0, bindDisabled: 0 [Main.Function]
  argTypes: Map
   x: Identifier: int [Main.ParamOnlySubject.Identifier]
   y: Identifier: int [Main.ParamOnlySubject.Identifier]
  retType: Identifier: int [Main.ParamOnlySubject.Identifier]
 body: Block [Main.BlockStatements.StmtList]
  AdditionOperator + [Main.BlockExpression.AddExp]
   first: Identifier: x [Main.BlockSubject.Identifier]
   second: Identifier: y [Main.BlockSubject.Identifier]
  WhileStatement [Main.While]
   condition: ComparisonOperator == [Main.Expression.ComparisonExp]
    first: Identifier: x [Main.Subject.Identifier]
    second: IntegerLiteral: 3 [Main.Subject.Literal]
   body: ParamPass () [Main.BlockExpression.ParamPassExp]
    operand: Identifier: doSomething [Main.BlockSubject.Identifier]
    param: NULL
  WhileStatement [Main.While]
   condition: ComparisonOperator == [Main.Expression.ComparisonExp]
    first: Identifier: y [Main.Subject.Identifier]
    second: IntegerLiteral: 3 [Main.Subject.Literal]
   body: Block [Main.BlockStatements.StmtList]
    ParamPass () [Main.BlockExpression.ParamPassExp]
     operand: Identifier: doSomething1 [Main.BlockSubject.Identifier]
     param: NULL
    ParamPass () [Main.BlockExpression.ParamPassExp]
     operand: Identifier: doSomething2 [Main.BlockSubject.Identifier]
     param: NULL
------------------------------------------------------
------------------ Parsed Data Dump ------------------
UserType [Main.Type]
 body: Block [Main.BlockStatements.StmtList]
  Definition [Main.Def] i: Identifier: float [Main.Subject.Identifier]
  Definition [Main.Def] j: Identifier: float [Main.Subject.Identifier]
------------------------------------------------------
