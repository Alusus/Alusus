ERROR SPPH1012 @ (12,7): Invalid break statement.
ERROR SPPH1012 @ (13,7): Invalid break statement.
ERROR SPPH1012 @ (19,7): Invalid break statement.
ERROR SPPH1012 @ (20,7): Invalid break statement.
------------------ Parsed Data Dump ------------------
Module [Main.ModuleStatements.StmtList]
 Definition [Main.Def] start: Function  [Main.Function]
  type: FunctionType [Main.Function]
   argTypes: NULL
   retType: Identifier: Void [Main.FuncSigSubject.Identifier]
  body: Scope [Main.BlockStatements.StmtList]
   Definition [Main.Def] i: ParamPass [] [Main.Expression.ParamPassExp]
    operand: Identifier: Int [Main.Subject.Identifier]
    param: IntegerLiteral: 32 [Main.Subject.Literal]
   WhileStatement [Main.While]
    condition: ComparisonOperator > [Main.Expression.ComparisonExp]
     first: Identifier: i [Main.Subject.Identifier]
     second: IntegerLiteral: 0 [Main.Subject.Literal]
    body: Scope [Main.BlockStatements.StmtList]
     BreakStatement [Main.Break]
      steps: NULL
     BreakStatement [Main.Break]
      steps: IntegerLiteral: 2 [Main.Subject.Literal]
   ForStatement [Main.For]
    initializer: AssignmentOperator = [Main.Expression.AssignmentExp]
     first: Identifier: i [Main.Subject.Identifier]
     second: IntegerLiteral: 0 [Main.Subject.Literal]
    condition: ComparisonOperator < [Main.Expression.ComparisonExp]
     first: Identifier: i [Main.Subject.Identifier]
     second: IntegerLiteral: 5 [Main.Subject.Literal]
    updater: PrefixOperator ++ [Main.Expression.UnaryExp]
     operand: Identifier: i [Main.Subject.Identifier]
    body: Scope [Main.BlockStatements.StmtList]
     BreakStatement [Main.Break]
      steps: NULL
     BreakStatement [Main.Break]
      steps: IntegerLiteral: 2 [Main.Subject.Literal]
------------------------------------------------------
