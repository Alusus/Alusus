import "alusus_spp";

def f1: @expname[f1] function (x:Int, args:...Int)=>void
{
};

def f2: function (x:Int, args:...Int)=>void
{
};

def f3: @wrongmodifier function (x:Int, args:...Int)=>void
{
};

def f4: @wrongmodifier[f4] function (x:Int, args:...Int)=>void
{
};

def f5: @expname[] function (x:Int, args:...Int)=>void
{
};

def f6: function (X:Int, args:...any)=>void;

def f7: @expname[f7] function (X:ptr[Int[8]]);

def f8: function (x)=>void
{
};

def f9: function (x: Module.Type, Module.Type)
{

};

def f10: function (x: Int, x: Int)
{
};

def funcs: {
  function f11;
  function f12 (x: Int);
  function f13 ()=>Void;
  function f14 {};
  function f15 (x:Int)=>Int {};
  @expname[F16] @shared function f16 {};
  func f17 (Int)=>void;
  function f18=>void;
  function f19 int=>void;
};

dump_ast f1;
dump_ast f2;
dump_ast f3;
dump_ast f4;
dump_ast f5;
dump_ast f6;
dump_ast f7;
dump_ast f8;
dump_ast f9;

dump_ast funcs;
