ERROR SPPA1003 @ (7,38)
from (62,5): No valid match was found for the given type.
Build Failed...
--------------------- Partial LLVM IR ----------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"

%Main_Coordinates = type { double, double }

@__anonymous0 = private constant [8 x i8] c"a = %d\0A\00", align 1
@__anonymous1 = private constant [18 x i8] c"b1 = %d, b2 = %d\0A\00", align 1
@__anonymous2 = private constant [12 x i8] c"__n__ = %d\0A\00", align 1
@__anonymous3 = private constant [10 x i8] c"a*a = %d\0A\00", align 1
@__anonymous4 = private constant [19 x i8] c"min of 5 & 7 = %d\0A\00", align 1
@__anonymous5 = private constant [4 x i8] c"%d \00", align 1
@__anonymous6 = private constant [2 x i8] c"\0A\00", align 1
@__anonymous7 = private constant [14 x i8] c"Hello Alusus\0A\00", align 1
@__anonymous8 = private constant [14 x i8] c"Hello Alusus\0A\00", align 1
@__anonymous9 = private constant [13 x i8] c"Hello {{n}}\0A\00", align 1
@__anonymous10 = private constant [13 x i8] c"Hello {{n}}\0A\00", align 1
@__anonymous11 = private constant [13 x i8] c"Hello World\0A\00", align 1
@__anonymous12 = private constant [14 x i8] c"p = (%f, %f)\0A\00", align 1

declare i64 @printf(i8*, ...)

define i32 @"Main.getMin(Int[32],Int[32])=>(Int[32])"(i32 %a, i32 %b) {
__block0:
  %a1 = alloca i32
  store i32 %a, i32* %a1
  %b2 = alloca i32
  store i32 %b, i32* %b2
  %0 = load i32, i32* %a1
  %1 = load i32, i32* %b2
  %2 = icmp sle i32 %0, %1
  br i1 %2, label %__block1, label %__block2

__block1:                                         ; preds = %__block0
  %3 = load i32, i32* %a1
  ret i32 %3

__block2:                                         ; preds = %__block0
  %4 = load i32, i32* %b2
  ret i32 %4

__block3:                                         ; No predecessors!
}

define float @"Main.getMin(Float[32],Float[32])=>(Float[32])"(float %a, float %b) {
__block4:
  %a1 = alloca float
  store float %a, float* %a1
  %b2 = alloca float
  store float %b, float* %b2
  %0 = load float, float* %a1
  %1 = load float, float* %b2
  %2 = fcmp ole float %0, %1
  br i1 %2, label %__block5, label %__block6

__block5:                                         ; preds = %__block4
  %3 = load float, float* %a1
  ret float %3

__block6:                                         ; preds = %__block4
  %4 = load float, float* %b2
  ret float %4

__block7:                                         ; No predecessors!
}

define void @"Main.start()=>(Void)"() {
__block8:
  %a = alloca i32
  %b1 = alloca i32
  %b2 = alloca i32
  %__n__ = alloca i32
  store i32 5, i32* %a
  store i32 6, i32* %b1
  store i32 7, i32* %b2
  store i32 8, i32* %__n__
  %0 = load i32, i32* %a
  %1 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__anonymous0, i32 0, i32 0), i32 %0)
  %2 = load i32, i32* %b1
  %3 = load i32, i32* %b2
  %4 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__anonymous1, i32 0, i32 0), i32 %2, i32 %3)
  %5 = load i32, i32* %__n__
  %6 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__anonymous2, i32 0, i32 0), i32 %5)
  %7 = load i32, i32* %a
  %8 = load i32, i32* %a
  %9 = mul nsw i32 %7, %8
  %10 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__anonymous3, i32 0, i32 0), i32 %9)
  %11 = call i32 @"Main.getMin(Int[32],Int[32])=>(Int[32])"(i32 5, i32 7)
  %12 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__anonymous4, i32 0, i32 0), i32 %11)
  store i32 0, i32* %a
  br label %__block9

__block9:                                         ; preds = %__block10, %__block8
  %13 = load i32, i32* %a
  %14 = icmp sle i32 %13, 9
  br i1 %14, label %__block11, label %__block12

__block10:                                        ; preds = %__block11
  %15 = load i32, i32* %a
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %a
  br label %__block9

__block11:                                        ; preds = %__block9
  %17 = load i32, i32* %a
  %18 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__anonymous5, i32 0, i32 0), i32 %17)
  br label %__block10

__block12:                                        ; preds = %__block9
  %19 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__anonymous6, i32 0, i32 0))
  %20 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__anonymous7, i32 0, i32 0))
  %21 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__anonymous8, i32 0, i32 0))
  %22 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__anonymous9, i32 0, i32 0))
  %23 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__anonymous10, i32 0, i32 0))
  %24 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__anonymous11, i32 0, i32 0))
  %p = alloca %Main_Coordinates
  %25 = getelementptr %Main_Coordinates, %Main_Coordinates* %p, i32 0, i32 0
  store double 5.500000e+00, double* %25
  %26 = getelementptr %Main_Coordinates, %Main_Coordinates* %p, i32 0, i32 1
  store double 0x401D333340000000, double* %26
  %27 = getelementptr %Main_Coordinates, %Main_Coordinates* %p, i32 0, i32 0
  %28 = getelementptr %Main_Coordinates, %Main_Coordinates* %p, i32 0, i32 1
  %29 = load double, double* %27
  %30 = load double, double* %28
  %31 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__anonymous12, i32 0, i32 0), double %29, double %30)
  ret void
}
------------------------------------------------------------
