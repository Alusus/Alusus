-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }

@"#anonymous0" = private constant [4 x i8] c"%s\0A\00"
@"#anonymous1" = private constant [21 x i8] c"if-statement/no-else\00"
@"#anonymous2" = private constant [17 x i8] c"if-block/no-else\00"
@"#anonymous3" = private constant [28 x i8] c"if-statement/else-statement\00"
@"#anonymous4" = private constant [15 x i8] c"else-statement\00"
@"#anonymous5" = private constant [24 x i8] c"if-block/else-statement\00"
@"#anonymous6" = private constant [15 x i8] c"else-statement\00"
@"#anonymous7" = private constant [24 x i8] c"if-statement/else-block\00"
@"#anonymous8" = private constant [11 x i8] c"else-block\00"
@"#anonymous9" = private constant [20 x i8] c"if-block/else-block\00"
@"#anonymous10" = private constant [11 x i8] c"else-block\00"
@llvm.global_ctors = appending constant [1 x %LlvmGlobalCtorDtor] [%LlvmGlobalCtorDtor { i32 0, void ()* @__entry__, i32* null }]
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @__entry__() {
"#block0":
  ret void
}

declare i64 @printf(i8*, ...)

define void @"Main.print(ptr[Word[8]])=>(Void)"(i8* %str) {
"#block1":
  %str1 = alloca i8*
  store i8* %str, i8** %str1
  %0 = load i8*, i8** %str1
  %1 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"#anonymous0", i32 0, i32 0), i8* %0)
  ret void
}

define void @"Main.main()=>(Void)"() {
"#block2":
  call void @"Main.testIf(Word[1])=>(Void)"(i1 false)
  call void @"Main.testIf(Word[1])=>(Void)"(i1 true)
  ret void
}

define void @"Main.testIf(Word[1])=>(Void)"(i1 %i) {
"#block3":
  %i1 = alloca i1
  store i1 %i, i1* %i1
  %0 = load i1, i1* %i1
  br i1 %0, label %"#block4", label %"#block5"

"#block4":                                        ; preds = %"#block3"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"#anonymous1", i32 0, i32 0))
  br label %"#block5"

"#block5":                                        ; preds = %"#block3", %"#block4"
  %1 = load i1, i1* %i1
  br i1 %1, label %"#block6", label %"#block7"

"#block6":                                        ; preds = %"#block5"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"#anonymous2", i32 0, i32 0))
  br label %"#block7"

"#block7":                                        ; preds = %"#block5", %"#block6"
  %2 = load i1, i1* %i1
  br i1 %2, label %"#block8", label %"#block9"

"#block8":                                        ; preds = %"#block7"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"#anonymous3", i32 0, i32 0))
  br label %"#block10"

"#block9":                                        ; preds = %"#block7"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"#anonymous4", i32 0, i32 0))
  br label %"#block10"

"#block10":                                       ; preds = %"#block9", %"#block8"
  %3 = load i1, i1* %i1
  br i1 %3, label %"#block11", label %"#block12"

"#block11":                                       ; preds = %"#block10"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @"#anonymous5", i32 0, i32 0))
  br label %"#block13"

"#block12":                                       ; preds = %"#block10"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"#anonymous6", i32 0, i32 0))
  br label %"#block13"

"#block13":                                       ; preds = %"#block12", %"#block11"
  %4 = load i1, i1* %i1
  br i1 %4, label %"#block14", label %"#block15"

"#block14":                                       ; preds = %"#block13"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @"#anonymous7", i32 0, i32 0))
  br label %"#block16"

"#block15":                                       ; preds = %"#block13"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"#anonymous8", i32 0, i32 0))
  br label %"#block16"

"#block16":                                       ; preds = %"#block15", %"#block14"
  %5 = load i1, i1* %i1
  br i1 %5, label %"#block17", label %"#block18"

"#block17":                                       ; preds = %"#block16"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"#anonymous9", i32 0, i32 0))
  br label %"#block19"

"#block18":                                       ; preds = %"#block16"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"#anonymous10", i32 0, i32 0))
  br label %"#block19"

"#block19":                                       ; preds = %"#block18", %"#block17"
  %j = alloca i32
  %6 = load i1, i1* %i1
  %j2 = alloca i32
  %i3 = alloca i32
  %j4 = alloca i32
  %i5 = alloca i32
  br i1 %6, label %"#block20", label %"#block21"

"#block20":                                       ; preds = %"#block19"
  store i32 2, i32* %i3
  br label %"#block22"

"#block21":                                       ; preds = %"#block19"
  store i32 3, i32* %i5
  br label %"#block22"

"#block22":                                       ; preds = %"#block21", %"#block20"
  ret void
}
------------------------------------------------------------
