ERROR SPPG1022 @ (71,23): Missing a return statement for a non-void function.
ERROR SPPG1022 @ (75,23): Missing a return statement for a non-void function.
ERROR SPPG1022 @ (81,23): Missing a return statement for a non-void function.
ERROR SPPG1021 @ (96,5): Unreachable code.
ERROR SPPG1021 @ (103,5): Unreachable code.
ERROR SPPG1006 @ (58,5): Invalid return value.
ERROR SPPG1006 @ (63,5): Invalid return value.
ERROR SPPG1006 @ (68,5): Invalid return value.
Build Failed...
--------------------- Partial LLVM IR ----------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"

@"#anonymous0" = private constant [11 x i8] c"getInt: %d\00", align 1
@"#anonymous1" = private constant [13 x i8] c"getFloat: %f\00", align 1
@"#anonymous2" = private constant [19 x i8] c"getFloatCasted: %f\00", align 1
@"#anonymous3" = private constant [16 x i8] c"getAddition: %d\00", align 1
@"#anonymous4" = private constant [19 x i8] c"getIntIndirect: %d\00", align 1

declare i64 @printf(i8*, ...)

define void @"Main.main()=>(Void)"() {
"#block0":
  %0 = call i32 @"Main.getInt()=>(Int[32])"()
  %1 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"#anonymous0", i32 0, i32 0), i32 %0)
  %2 = call double @"Main.getFloat()=>(Float[64])"()
  %3 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"#anonymous1", i32 0, i32 0), double %2)
  %4 = call double @"Main.getFloatCasted()=>(Float[64])"()
  %5 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"#anonymous2", i32 0, i32 0), double %4)
  %6 = call i32 @"Main.getAddition()=>(Int[32])"()
  %7 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"#anonymous3", i32 0, i32 0), i32 %6)
  %8 = call i32 @"Main.getIntIndirect()=>(Int[32])"()
  %9 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"#anonymous4", i32 0, i32 0), i32 %8)
  %10 = call i32 @"Main.terminalIf(Int[32])=>(Int[32])"(i32 5)
  ret void
}

define i32 @"Main.getInt()=>(Int[32])"() {
"#block1":
  ret i32 30
}

define double @"Main.getFloat()=>(Float[64])"() {
"#block2":
  ret double 5.500000e+00
}

define double @"Main.getFloatCasted()=>(Float[64])"() {
"#block3":
  ret double 5.500000e+00
}

define i32 @"Main.getAddition()=>(Int[32])"() {
"#block4":
  ret i32 15
}

define i32 @"Main.getIntIndirect()=>(Int[32])"() {
"#block5":
  %0 = call i32 @"Main.getInt()=>(Int[32])"()
  ret i32 %0
}

define i32 @"Main.missingReturn1()=>(Int[32])"() {
"#block6":
}

define i32 @"Main.missingReturn2(Int[32])=>(Int[32])"(i32 %i) {
"#block7":
  %i1 = alloca i32
  store i32 %i, i32* %i1
  %0 = load i32, i32* %i1
  %1 = icmp eq i32 %0, 5
  br i1 %1, label %"#block8", label %"#block9"

"#block8":                                        ; preds = %"#block7"
  ret i32 3

"#block9":                                        ; preds = %"#block7"
  br label %"#block10"

"#block10":                                       ; preds = %"#block9"
}

define i32 @"Main.missingReturn3(Int[32])=>(Int[32])"(i32 %i) {
"#block11":
  %i1 = alloca i32
  store i32 %i, i32* %i1
  %0 = load i32, i32* %i1
  %1 = icmp eq i32 %0, 5
  br i1 %1, label %"#block12", label %"#block13"

"#block12":                                       ; preds = %"#block11"
  br label %"#block14"

"#block13":                                       ; preds = %"#block11"
  ret i32 3

"#block14":                                       ; preds = %"#block12"
}

define i32 @"Main.terminalIf(Int[32])=>(Int[32])"(i32 %i) {
"#block15":
  %i1 = alloca i32
  store i32 %i, i32* %i1
  %0 = load i32, i32* %i1
  %1 = icmp eq i32 %0, 5
  br i1 %1, label %"#block16", label %"#block17"

"#block16":                                       ; preds = %"#block15"
  ret i32 1

"#block17":                                       ; preds = %"#block15"
  ret i32 3
}

define i32 @"Main.unreachableCode1()=>(Int[32])"() {
"#block18":
  ret i32 5
}

define i32 @"Main.unreachableCode2(Int[32])=>(Int[32])"(i32 %i) {
"#block19":
  %i1 = alloca i32
  store i32 %i, i32* %i1
  %0 = load i32, i32* %i1
  %1 = icmp eq i32 %0, 5
  br i1 %1, label %"#block20", label %"#block21"

"#block20":                                       ; preds = %"#block19"
  ret i32 1

"#block21":                                       ; preds = %"#block19"
  ret i32 3
}

define void @"Main.retVoid()=>(Void)"() {
"#block22":
  ret void
  ret void
}

define void @"Main.voidFunc()=>(Void)"() {
"#block23":
  ret void
}

define void @"Main.invalidReturn1()=>(Void)"() {
"#block24":
  ret void
}

define i32 @"Main.invalidReturn2()=>(Int[32])"() {
"#block25":
}

define float* @"Main.invalidReturn3()=>(ptr[Float[32]])"() {
"#block26":
}
------------------------------------------------------------
