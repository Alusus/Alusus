ERROR SPPA1008 @ (72,27): Provided arguments do not match signature.
ERROR SPPA1007 @ (73,27): Unknown symbol.
ERROR SPPA1008 @ (74,27): Provided arguments do not match signature.
ERROR SPPG1002 @ (75,27): Invalid operation.
Build Failed...
--------------------- Partial LLVM IR ----------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%C = type { i32 }
%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }
%A = type { i32 }
%M_B = type { i32 }
%D = type { %A }
%E = type { i32, %C }
%__VaList = type { i32, i32, i8*, i8* }

@"#anonymous0" = private constant [4 x i8] c"%d\0A\00"
@"#anonymous1" = private constant [4 x i8] c"%d\0A\00"
@"#anonymous2" = private constant [4 x i8] c"%d\0A\00"
@"#anonymous3" = private constant [4 x i8] c"%d\0A\00"
@"#anonymous4" = private constant [4 x i8] c"%d\0A\00"
@"#anonymous5" = private constant [4 x i8] c"%d\0A\00"
@"#anonymous6" = private constant [4 x i8] c"%d\0A\00"
@"#anonymous7" = private constant [4 x i8] c"%d\0A\00"
@"#anonymous8" = private constant [4 x i8] c"%d\0A\00"
@"#anonymous9" = private constant [8 x i8] c"%d, %d\0A\00"
@"#anonymous10" = private constant [4 x i8] c"%d\0A\00"
@"!globalC" = global %C zeroinitializer
@"#anonymous11" = private constant [16 x i8] c"A initialized.\0A\00"
@"#anonymous12" = private constant [15 x i8] c"A terminated.\0A\00"
@"#anonymous13" = private constant [16 x i8] c"B initialized.\0A\00"
@"#anonymous14" = private constant [15 x i8] c"B terminated.\0A\00"
@"#anonymous15" = private constant [16 x i8] c"C initialized.\0A\00"
@"#anonymous16" = private constant [15 x i8] c"C terminated.\0A\00"
@"#anonymous17" = private constant [30 x i8] c"C initialized with var args.\0A\00"
@"#anonymous18" = private constant [12 x i8] c"varArgFunc\0A\00"
@llvm.global_ctors = appending constant [1 x %LlvmGlobalCtorDtor] [%LlvmGlobalCtorDtor { i32 0, void ()* @__constructor__3, i32* null }]
@llvm.global_dtors = appending constant [1 x %LlvmGlobalCtorDtor] [%LlvmGlobalCtorDtor { i32 0, void ()* @__destructor__4, i32* null }]

define void @"test()"() {
"#block0":
  %"#temp0" = alloca %A
  call void @"A.~init(iref[A])"(%A* %"#temp0")
  %0 = getelementptr %A, %A* %"#temp0", i32 0, i32 0
  %1 = load i32, i32* %0
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"#anonymous0", i32 0, i32 0), i32 %1)
  call void @"A.~terminate(iref[A])"(%A* %"#temp0")
  %"#temp1" = alloca %M_B
  call void @"M.B.~init(iref[M.B])"(%M_B* %"#temp1")
  %3 = getelementptr %M_B, %M_B* %"#temp1", i32 0, i32 0
  %4 = load i32, i32* %3
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"#anonymous1", i32 0, i32 0), i32 %4)
  call void @"M.B.~terminate(iref[M.B])"(%M_B* %"#temp1")
  %"#temp2" = alloca %C
  call void @"C.~init(iref[C],Int[32])"(%C* %"#temp2", i32 9)
  %6 = getelementptr %C, %C* %"#temp2", i32 0, i32 0
  %7 = load i32, i32* %6
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"#anonymous2", i32 0, i32 0), i32 %7)
  call void @"C.~terminate(iref[C])"(%C* %"#temp2")
  %"#temp3" = alloca %C
  call void (%C*, i32, ...) @"C.~init(iref[C],Int[32],ArgPack[Int[32],1,0])"(%C* %"#temp3", i32 2, i32 9, i32 10)
  %9 = getelementptr %C, %C* %"#temp3", i32 0, i32 0
  %10 = load i32, i32* %9
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"#anonymous3", i32 0, i32 0), i32 %10)
  call void @"C.~terminate(iref[C])"(%C* %"#temp3")
  %"#temp4" = alloca %D
  call void @D.__autoConstruct__(%D* %"#temp4")
  %12 = getelementptr %D, %D* %"#temp4", i32 0, i32 0
  %13 = getelementptr %A, %A* %12, i32 0, i32 0
  %14 = load i32, i32* %13
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"#anonymous4", i32 0, i32 0), i32 %14)
  call void @D.__autoDestruct__(%D* %"#temp4")
  %e = alloca %E
  call void @E.__autoConstruct__(%E* %e)
  %16 = getelementptr %E, %E* %e, i32 0, i32 0
  %17 = getelementptr %E, %E* %e, i32 0, i32 1
  %18 = load i32, i32* %16
  %19 = load %C, %C* %17
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"#anonymous9", i32 0, i32 0), i32 %18, %C %19)
  %c = alloca %C
  %"#temp11" = alloca %A
  call void @"A.~init(iref[A])"(%A* %"#temp11")
  %21 = getelementptr %A, %A* %"#temp11", i32 0, i32 0
  %"#temp12" = alloca %A
  call void @"A.~init(iref[A])"(%A* %"#temp12")
  %22 = getelementptr %A, %A* %"#temp12", i32 0, i32 0
  %23 = load i32, i32* %21
  %24 = load i32, i32* %22
  call void (%C*, i32, ...) @"C.~init(iref[C],Int[32],ArgPack[Int[32],1,0])"(%C* %c, i32 2, i32 %23, i32 %24)
  call void @"A.~terminate(iref[A])"(%A* %"#temp11")
  call void @"A.~terminate(iref[A])"(%A* %"#temp12")
  %"#temp13" = alloca %A
  call void @"A.~init(iref[A])"(%A* %"#temp13")
  %25 = getelementptr %A, %A* %"#temp13", i32 0, i32 0
  %"#temp14" = alloca %A
  call void @"A.~init(iref[A])"(%A* %"#temp14")
  %26 = getelementptr %A, %A* %"#temp14", i32 0, i32 0
  %27 = load i32, i32* %25
  %28 = load i32, i32* %26
  call void (i32, ...) @"varArgFunc(Int[32],ArgPack[Int[32],0,0])"(i32 2, i32 %27, i32 %28)
  call void @"A.~terminate(iref[A])"(%A* %"#temp13")
  call void @"A.~terminate(iref[A])"(%A* %"#temp14")
  %29 = load i32, i32* getelementptr inbounds (%C, %C* @"!globalC", i32 0, i32 0)
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"#anonymous10", i32 0, i32 0), i32 %29)
  call void @E.__autoDestruct__(%E* %e)
  call void @"C.~terminate(iref[C])"(%C* %c)
  ret void
}

define void @"A.~init(iref[A])"(%A* %this) {
"#block5":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = load %A*, %A** %this1
  %1 = getelementptr %A, %A* %0, i32 0, i32 0
  store i32 7, i32* %1
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"#anonymous11", i32 0, i32 0))
  ret void
}

declare i32 @printf(i8*, ...)

define void @"A.~terminate(iref[A])"(%A* %this) {
"#block6":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"#anonymous12", i32 0, i32 0))
  ret void
}

define void @"M.B.~init(iref[M.B])"(%M_B* %this) {
"#block7":
  %this1 = alloca %M_B*
  store %M_B* %this, %M_B** %this1
  %0 = load %M_B*, %M_B** %this1
  %1 = getelementptr %M_B, %M_B* %0, i32 0, i32 0
  store i32 8, i32* %1
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"#anonymous13", i32 0, i32 0))
  ret void
}

define void @"M.B.~terminate(iref[M.B])"(%M_B* %this) {
"#block8":
  %this1 = alloca %M_B*
  store %M_B* %this, %M_B** %this1
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"#anonymous14", i32 0, i32 0))
  ret void
}

define void @"C.~init(iref[C],Int[32])"(%C* %this, i32 %n) {
"#block9":
  %this1 = alloca %C*
  store %C* %this, %C** %this1
  %n2 = alloca i32
  store i32 %n, i32* %n2
  %0 = load %C*, %C** %this1
  %1 = getelementptr %C, %C* %0, i32 0, i32 0
  %2 = load i32, i32* %n2
  store i32 %2, i32* %1
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"#anonymous15", i32 0, i32 0))
  ret void
}

define void @"C.~terminate(iref[C])"(%C* %this) {
"#block10":
  %this1 = alloca %C*
  store %C* %this, %C** %this1
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"#anonymous16", i32 0, i32 0))
  ret void
}

define void @"C.~init(iref[C],Int[32],ArgPack[Int[32],1,0])"(%C* %this, i32 %count, ...) {
"#block11":
  %__vaList = alloca %__VaList
  %0 = bitcast %__VaList* %__vaList to i8*
  call void @llvm.va_start(i8* %0)
  %this1 = alloca %C*
  store %C* %this, %C** %this1
  %count2 = alloca i32
  store i32 %count, i32* %count2
  %1 = load %C*, %C** %this1
  %2 = getelementptr %C, %C* %1, i32 0, i32 0
  store i32 0, i32* %2
  br label %"#block12"

"#block12":                                       ; preds = %"#block13", %"#block11"
  %3 = load i32, i32* %count2
  %4 = sub nsw i32 %3, 1
  store i32 %4, i32* %count2
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %"#block13", label %"#block14"

"#block13":                                       ; preds = %"#block12"
  %6 = va_arg %__VaList* %__vaList, i32
  %7 = load %C*, %C** %this1
  %8 = getelementptr %C, %C* %7, i32 0, i32 0
  %9 = load i32, i32* %8
  %10 = add nsw i32 %9, %6
  store i32 %10, i32* %8
  br label %"#block12"

"#block14":                                       ; preds = %"#block12"
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"#anonymous17", i32 0, i32 0))
  %12 = bitcast %__VaList* %__vaList to i8*
  call void @llvm.va_end(i8* %12)
  ret void
}

define void @D.__autoConstruct__(%D* %this) {
"#block1":
  %this1 = alloca %D*
  store %D* %this, %D** %this1
  %0 = getelementptr %D, %D* %this, i32 0, i32 0
  call void @"A.~init(iref[A])"(%A* %0)
  ret void
}

define void @D.__autoDestruct__(%D* %this) {
"#block2":
  %0 = getelementptr %D, %D* %this, i32 0, i32 0
  call void @"A.~terminate(iref[A])"(%A* %0)
  ret void
}

define void @E.__autoConstruct__(%E* %this) {
"#block3":
  %this1 = alloca %E*
  store %E* %this, %E** %this1
  %"#temp5" = alloca %A
  call void @"A.~init(iref[A])"(%A* %"#temp5")
  %0 = getelementptr %A, %A* %"#temp5", i32 0, i32 0
  %1 = load %E*, %E** %this1
  %2 = getelementptr %E, %E* %1, i32 0, i32 0
  %3 = load i32, i32* %0
  store i32 %3, i32* %2
  call void @"A.~terminate(iref[A])"(%A* %"#temp5")
  %4 = getelementptr %E, %E* %this, i32 0, i32 1
  %"#temp6" = alloca %A
  call void @"A.~init(iref[A])"(%A* %"#temp6")
  %5 = getelementptr %A, %A* %"#temp6", i32 0, i32 0
  %"#temp7" = alloca %A
  call void @"A.~init(iref[A])"(%A* %"#temp7")
  %6 = getelementptr %A, %A* %"#temp7", i32 0, i32 0
  %7 = load i32, i32* %5
  %8 = load i32, i32* %6
  call void (%C*, i32, ...) @"C.~init(iref[C],Int[32],ArgPack[Int[32],1,0])"(%C* %4, i32 3, i32 %7, i32 %8, i32 5)
  call void @"A.~terminate(iref[A])"(%A* %"#temp6")
  call void @"A.~terminate(iref[A])"(%A* %"#temp7")
  %"#temp8" = alloca %A
  call void @"A.~init(iref[A])"(%A* %"#temp8")
  %9 = getelementptr %A, %A* %"#temp8", i32 0, i32 0
  %"#temp9" = alloca %A
  call void @"A.~init(iref[A])"(%A* %"#temp9")
  %10 = getelementptr %A, %A* %"#temp9", i32 0, i32 0
  %"#temp10" = alloca %A
  call void @"A.~init(iref[A])"(%A* %"#temp10")
  %11 = getelementptr %A, %A* %"#temp10", i32 0, i32 0
  %12 = load i32, i32* %9
  %13 = load i32, i32* %10
  %14 = load i32, i32* %11
  call void (i32, ...) @"varArgFunc(Int[32],ArgPack[Int[32],0,0])"(i32 3, i32 %12, i32 %13, i32 %14)
  call void @"A.~terminate(iref[A])"(%A* %"#temp8")
  call void @"A.~terminate(iref[A])"(%A* %"#temp9")
  call void @"A.~terminate(iref[A])"(%A* %"#temp10")
  ret void
}

define void @"varArgFunc(Int[32],ArgPack[Int[32],0,0])"(i32 %count, ...) {
"#block15":
  %__vaList = alloca %__VaList
  %0 = bitcast %__VaList* %__vaList to i8*
  call void @llvm.va_start(i8* %0)
  %count1 = alloca i32
  store i32 %count, i32* %count1
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"#anonymous18", i32 0, i32 0))
  %2 = bitcast %__VaList* %__vaList to i8*
  call void @llvm.va_end(i8* %2)
  ret void
}

define void @E.__autoDestruct__(%E* %this) {
"#block4":
  %0 = getelementptr %E, %E* %this, i32 0, i32 1
  call void @"C.~terminate(iref[C])"(%C* %0)
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #0

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #0

define void @__constructor__3() {
"#block16":
  %"#temp15" = alloca %A
  call void @"A.~init(iref[A])"(%A* %"#temp15")
  %0 = getelementptr %A, %A* %"#temp15", i32 0, i32 0
  %1 = load i32, i32* %0
  call void (%C*, i32, ...) @"C.~init(iref[C],Int[32],ArgPack[Int[32],1,0])"(%C* @"!globalC", i32 2, i32 %1, i32 2)
  call void @"A.~terminate(iref[A])"(%A* %"#temp15")
  ret void
}

define void @__destructor__4() {
"#block17":
  call void @"C.~terminate(iref[C])"(%C* @"!globalC")
  ret void
}

attributes #0 = { nounwind }
------------------------------------------------------------
