import "alusus_spp";
module Spp {
    type BuildMgr {
        @expname[Spp_BuildMgr_dumpLlvmIrForElement]
        function dumpLlvmIrForElement (element: ptr);
    };
    def buildMgr: ref[BuildMgr];
}

def Main: module
{
  def print: @expname[printf] function (fmt: ptr[Word[8]], args: ...any)=>Int[64];

  def start: function () => Void
  {
    def i: Int[32];
    def j: Int;
    i = 10;

    while i > 0 print("while-statement: %d\n", i);

    while i > 0 {
      print("while-block: %d\n", i);
      i = i - 1;
      def j: Int;
    };
  };
};

Spp.buildMgr.dumpLlvmIrForElement(Main~ast);
