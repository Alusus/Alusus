[0;31mERROR SPPG1006: Invalid return value.[0m
  return_statement_test.alusus (58,5)
[0;31mERROR SPPG1006: Invalid return value.[0m
  return_statement_test.alusus (63,5)
[0;31mERROR SPPG1006: Invalid return value.[0m
  return_statement_test.alusus (68,5)
[0;31mERROR SPPG1022: Missing a return statement for a non-void function.[0m
  return_statement_test.alusus (71,23)
[0;31mERROR SPPG1022: Missing a return statement for a non-void function.[0m
  return_statement_test.alusus (75,23)
[0;31mERROR SPPG1022: Missing a return statement for a non-void function.[0m
  return_statement_test.alusus (81,23)
[0;31mERROR SPPG1021: Unreachable code.[0m
  return_statement_test.alusus (96,5)
[0;31mERROR SPPG1021: Unreachable code.[0m
  return_statement_test.alusus (103,5)
Build Failed...
--------------------- Partial LLVM IR ----------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }

@"#anonymous0" = private constant [11 x i8] c"getInt: %d\00"
@"#anonymous1" = private constant [13 x i8] c"getFloat: %f\00"
@"#anonymous2" = private constant [19 x i8] c"getFloatCasted: %f\00"
@"#anonymous3" = private constant [16 x i8] c"getAddition: %d\00"
@"#anonymous4" = private constant [19 x i8] c"getIntIndirect: %d\00"
@llvm.global_ctors = appending constant [1 x %LlvmGlobalCtorDtor] [%LlvmGlobalCtorDtor { i32 0, void ()* @__entry__, i32* null }]
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @__entry__() {
"#block0":
  ret void
}

declare i64 @printf(i8*, ...)

define void @"Main.main()=>(Void)"() {
"#block1":
  %0 = call i32 @"Main.getInt()=>(Int[32])"()
  %1 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"#anonymous0", i32 0, i32 0), i32 %0)
  %2 = call double @"Main.getFloat()=>(Float[64])"()
  %3 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"#anonymous1", i32 0, i32 0), double %2)
  %4 = call double @"Main.getFloatCasted()=>(Float[64])"()
  %5 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"#anonymous2", i32 0, i32 0), double %4)
  %6 = call i32 @"Main.getAddition()=>(Int[32])"()
  %7 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"#anonymous3", i32 0, i32 0), i32 %6)
  %8 = call i32 @"Main.getIntIndirect()=>(Int[32])"()
  %9 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"#anonymous4", i32 0, i32 0), i32 %8)
  %10 = call i32 @"Main.missingReturn1()=>(Int[32])"()
  %11 = call i32 @"Main.missingReturn2(Int[32])=>(Int[32])"(i32 1)
  %12 = call i32 @"Main.missingReturn3(Int[32])=>(Int[32])"(i32 2)
  %13 = call i32 @"Main.terminalIf(Int[32])=>(Int[32])"(i32 5)
  %14 = call i32 @"Main.unreachableCode1()=>(Int[32])"()
  %15 = call i32 @"Main.unreachableCode2(Int[32])=>(Int[32])"(i32 3)
  ret void
}

define i32 @"Main.getInt()=>(Int[32])"() {
"#block2":
  ret i32 30
}

define double @"Main.getFloat()=>(Float[64])"() {
"#block3":
  ret double 5.500000e+00
}

define double @"Main.getFloatCasted()=>(Float[64])"() {
"#block4":
  ret double 5.500000e+00
}

define i32 @"Main.getAddition()=>(Int[32])"() {
"#block5":
  ret i32 15
}

define i32 @"Main.getIntIndirect()=>(Int[32])"() {
"#block6":
  %0 = call i32 @"Main.getInt()=>(Int[32])"()
  ret i32 %0
}

define i32 @"Main.missingReturn1()=>(Int[32])"() {
"#block12":
}

define i32 @"Main.missingReturn2(Int[32])=>(Int[32])"(i32 %i) {
"#block13":
  %i1 = alloca i32
  store i32 %i, i32* %i1
  %0 = load i32, i32* %i1
  %1 = icmp eq i32 %0, 5
  br i1 %1, label %"#block14", label %"#block15"

"#block14":                                       ; preds = %"#block13"
  ret i32 3

"#block15":                                       ; preds = %"#block13"
  br label %"#block16"

"#block16":                                       ; preds = %"#block15"
}

define i32 @"Main.missingReturn3(Int[32])=>(Int[32])"(i32 %i) {
"#block17":
  %i1 = alloca i32
  store i32 %i, i32* %i1
  %0 = load i32, i32* %i1
  %1 = icmp eq i32 %0, 5
  br i1 %1, label %"#block18", label %"#block19"

"#block18":                                       ; preds = %"#block17"
  br label %"#block20"

"#block19":                                       ; preds = %"#block17"
  ret i32 3

"#block20":                                       ; preds = %"#block18"
}

define i32 @"Main.terminalIf(Int[32])=>(Int[32])"(i32 %i) {
"#block21":
  %i1 = alloca i32
  store i32 %i, i32* %i1
  %0 = load i32, i32* %i1
  %1 = icmp eq i32 %0, 5
  br i1 %1, label %"#block22", label %"#block23"

"#block22":                                       ; preds = %"#block21"
  ret i32 1

"#block23":                                       ; preds = %"#block21"
  ret i32 3
}

define i32 @"Main.unreachableCode1()=>(Int[32])"() {
"#block24":
  ret i32 5
}

define i32 @"Main.unreachableCode2(Int[32])=>(Int[32])"(i32 %i) {
"#block25":
  %i1 = alloca i32
  store i32 %i, i32* %i1
  %0 = load i32, i32* %i1
  %1 = icmp eq i32 %0, 5
  br i1 %1, label %"#block26", label %"#block27"

"#block26":                                       ; preds = %"#block25"
  ret i32 1

"#block27":                                       ; preds = %"#block25"
  ret i32 3
}

define void @"Main.retVoid()=>(Void)"() {
"#block7":
  ret void
}

define void @"Main.voidFunc()=>(Void)"() {
"#block8":
  ret void
}

define void @"Main.invalidReturn1()=>(Void)"() {
"#block9":
  ret void
}

define i32 @"Main.invalidReturn2()=>(Int[32])"() {
"#block10":
}

define float* @"Main.invalidReturn3()=>(ptr[Float[32]])"() {
"#block11":
}
------------------------------------------------------------
