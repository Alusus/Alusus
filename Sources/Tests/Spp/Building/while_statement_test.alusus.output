-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }

@"#anonymous0" = private constant [21 x i8] c"while-statement: %d\0A\00"
@"#anonymous1" = private constant [17 x i8] c"while-block: %d\0A\00"
@llvm.global_ctors = appending constant [1 x %LlvmGlobalCtorDtor] [%LlvmGlobalCtorDtor { i32 0, void ()* @__entry__, i32* null }]
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @__entry__() {
"#block0":
  ret void
}

declare i64 @printf(i8*, ...)

define void @"Main.start()=>(Void)"() {
"#block1":
  %i = alloca i32
  %j = alloca i32
  store i32 10, i32* %i
  br label %"#block2"

"#block2":                                        ; preds = %"#block3", %"#block1"
  %0 = load i32, i32* %i
  %1 = icmp sgt i32 %0, 0
  br i1 %1, label %"#block3", label %"#block4"

"#block3":                                        ; preds = %"#block2"
  %2 = load i32, i32* %i
  %3 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"#anonymous0", i32 0, i32 0), i32 %2)
  br label %"#block2"

"#block4":                                        ; preds = %"#block2"
  %j1 = alloca i32
  br label %"#block5"

"#block5":                                        ; preds = %"#block6", %"#block4"
  %4 = load i32, i32* %i
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %"#block6", label %"#block7"

"#block6":                                        ; preds = %"#block5"
  %6 = load i32, i32* %i
  %7 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"#anonymous1", i32 0, i32 0), i32 %6)
  %8 = load i32, i32* %i
  %9 = sub nsw i32 %8, 1
  store i32 %9, i32* %i
  br label %"#block5"

"#block7":                                        ; preds = %"#block5"
  ret void
}
------------------------------------------------------------
