-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"

%A = type { i32 }

@"#anonymous0" = private constant [14 x i8] c"constructed!\0A\00", align 1
@"#anonymous1" = private constant [18 x i8] c"testNoReturn: %d\0A\00", align 1
@"#anonymous2" = private constant [13 x i8] c"destructed!\0A\00", align 1

define void @__constructor__() {
"#block0":
  ret void
}

define void @"testNoReturn()"() {
"#block1":
  %a = alloca %A
  call void @A.__autoConstruct__(%A* %a)
  call void @"A.construct(ref[A])"(%A* %a)
  %0 = getelementptr %A, %A* %a, i32 0, i32 0
  %1 = load i32, i32* %0
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"#anonymous1", i32 0, i32 0), i32 %1)
  call void @"A.destruct(ptr[A])"(%A* %a)
  call void @A.__autoDestruct__(%A* %a)
  ret void
}

define void @A.__autoConstruct__(%A* %this) {
"#block2":
  ret void
}

define void @A.__autoDestruct__(%A* %this) {
"#block3":
  ret void
}

define void @"A.construct(ref[A])"(%A* %this) {
"#block4":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"#anonymous0", i32 0, i32 0))
  %1 = load %A*, %A** %this1
  %2 = getelementptr %A, %A* %1, i32 0, i32 0
  store i32 1, i32* %2
  ret void
}

declare i32 @printf(i8*, ...)

define void @"A.destruct(ptr[A])"(%A* %this) {
"#block5":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = load %A*, %A** %this1
  %1 = getelementptr %A, %A* %0, i32 0, i32 0
  store i32 0, i32* %1
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"#anonymous2", i32 0, i32 0))
  ret void
}
------------------------------------------------------------
-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"

%A = type { i32 }

@"#anonymous0" = private constant [14 x i8] c"constructed!\0A\00", align 1
@"#anonymous1" = private constant [20 x i8] c"testReturnVoid: %d\0A\00", align 1
@"#anonymous2" = private constant [13 x i8] c"destructed!\0A\00", align 1

define void @__constructor__() {
"#block0":
  ret void
}

define void @"testReturnVoid()"() {
"#block1":
  %a = alloca %A
  call void @A.__autoConstruct__(%A* %a)
  call void @"A.construct(ref[A])"(%A* %a)
  %0 = getelementptr %A, %A* %a, i32 0, i32 0
  %1 = load i32, i32* %0
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"#anonymous1", i32 0, i32 0), i32 %1)
  call void @"A.destruct(ptr[A])"(%A* %a)
  call void @A.__autoDestruct__(%A* %a)
  ret void
  ret void
}

define void @A.__autoConstruct__(%A* %this) {
"#block2":
  ret void
}

define void @A.__autoDestruct__(%A* %this) {
"#block3":
  ret void
}

define void @"A.construct(ref[A])"(%A* %this) {
"#block4":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"#anonymous0", i32 0, i32 0))
  %1 = load %A*, %A** %this1
  %2 = getelementptr %A, %A* %1, i32 0, i32 0
  store i32 1, i32* %2
  ret void
}

declare i32 @printf(i8*, ...)

define void @"A.destruct(ptr[A])"(%A* %this) {
"#block5":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = load %A*, %A** %this1
  %1 = getelementptr %A, %A* %0, i32 0, i32 0
  store i32 0, i32* %1
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"#anonymous2", i32 0, i32 0))
  ret void
}
------------------------------------------------------------
-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"

%A = type { i32 }

@"#anonymous0" = private constant [14 x i8] c"constructed!\0A\00", align 1
@"#anonymous1" = private constant [23 x i8] c"testReturnNonVoid: %d\0A\00", align 1
@"#anonymous2" = private constant [13 x i8] c"destructed!\0A\00", align 1

define void @__constructor__() {
"#block0":
  ret void
}

define i32 @"testReturnNonVoid()=>(Int[32])"() {
"#block1":
  %a = alloca %A
  call void @A.__autoConstruct__(%A* %a)
  call void @"A.construct(ref[A])"(%A* %a)
  %0 = getelementptr %A, %A* %a, i32 0, i32 0
  %1 = load i32, i32* %0
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"#anonymous1", i32 0, i32 0), i32 %1)
  %3 = getelementptr %A, %A* %a, i32 0, i32 0
  %4 = load i32, i32* %3
  call void @"A.destruct(ptr[A])"(%A* %a)
  call void @A.__autoDestruct__(%A* %a)
  ret i32 %4
}

define void @A.__autoConstruct__(%A* %this) {
"#block2":
  ret void
}

define void @A.__autoDestruct__(%A* %this) {
"#block3":
  ret void
}

define void @"A.construct(ref[A])"(%A* %this) {
"#block4":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"#anonymous0", i32 0, i32 0))
  %1 = load %A*, %A** %this1
  %2 = getelementptr %A, %A* %1, i32 0, i32 0
  store i32 1, i32* %2
  ret void
}

declare i32 @printf(i8*, ...)

define void @"A.destruct(ptr[A])"(%A* %this) {
"#block5":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = load %A*, %A** %this1
  %1 = getelementptr %A, %A* %0, i32 0, i32 0
  store i32 0, i32* %1
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"#anonymous2", i32 0, i32 0))
  ret void
}
------------------------------------------------------------
-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"

%A = type { i32 }

@"#anonymous0" = private constant [14 x i8] c"constructed!\0A\00", align 1
@"#anonymous1" = private constant [7 x i8] c"getA.\0A\00", align 1
@"#anonymous2" = private constant [15 x i8] c"constructed2!\0A\00", align 1
@"#anonymous3" = private constant [13 x i8] c"destructed!\0A\00", align 1
@"#anonymous4" = private constant [14 x i8] c"testReturnA.\0A\00", align 1

define void @__constructor__() {
"#block0":
  ret void
}

define void @"testReturnA()"() {
"#block1":
  %"#temp0" = alloca %A
  call void @"getA()=>(A)"(%A* %"#temp0")
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"#anonymous4", i32 0, i32 0))
  call void @"A.destruct(ptr[A])"(%A* %"#temp0")
  call void @A.__autoDestruct__(%A* %"#temp0")
  ret void
}

define void @A.__autoConstruct__(%A* %this) {
"#block2":
  ret void
}

define void @A.__autoDestruct__(%A* %this) {
"#block3":
  ret void
}

define void @"getA()=>(A)"(%A* %"#ret") {
"#block4":
  %a = alloca %A
  call void @A.__autoConstruct__(%A* %a)
  call void @"A.construct(ref[A])"(%A* %a)
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"#anonymous1", i32 0, i32 0))
  call void @A.__autoConstruct__(%A* %"#ret")
  call void @"A.construct(ref[A],ref[A])"(%A* %"#ret", %A* %a)
  call void @"A.destruct(ptr[A])"(%A* %a)
  call void @A.__autoDestruct__(%A* %a)
  ret void
  ret void
}

define void @"A.construct(ref[A])"(%A* %this) {
"#block5":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"#anonymous0", i32 0, i32 0))
  %1 = load %A*, %A** %this1
  %2 = getelementptr %A, %A* %1, i32 0, i32 0
  store i32 1, i32* %2
  ret void
}

declare i32 @printf(i8*, ...)

define void @"A.construct(ref[A],ref[A])"(%A* %this, %A* %that) {
"#block6":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %that2 = alloca %A*
  store %A* %that, %A** %that2
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"#anonymous2", i32 0, i32 0))
  %1 = load %A*, %A** %this1
  %2 = getelementptr %A, %A* %1, i32 0, i32 0
  %3 = load %A*, %A** %that2
  %4 = getelementptr %A, %A* %3, i32 0, i32 0
  %5 = load i32, i32* %4
  %6 = mul nsw i32 %5, 2
  store i32 %6, i32* %2
  ret void
}

define void @"A.destruct(ptr[A])"(%A* %this) {
"#block7":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = load %A*, %A** %this1
  %1 = getelementptr %A, %A* %0, i32 0, i32 0
  store i32 0, i32* %1
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"#anonymous3", i32 0, i32 0))
  ret void
}
------------------------------------------------------------
-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"

%A = type { i32 }

@"#anonymous0" = private constant [14 x i8] c"constructed!\0A\00", align 1
@"#anonymous1" = private constant [14 x i8] c"testLoop: %d\0A\00", align 1
@"#anonymous2" = private constant [13 x i8] c"destructed!\0A\00", align 1
@"#anonymous3" = private constant [15 x i8] c"testLoop-out.\0A\00", align 1

define void @__constructor__() {
"#block0":
  ret void
}

define void @"testLoop()"() {
"#block1":
  %i = alloca i32
  store i32 2, i32* %i
  %a = alloca %A
  br label %"#block2"

"#block2":                                        ; preds = %"#block3", %"#block1"
  %0 = load i32, i32* %i
  %1 = icmp sgt i32 %0, 0
  br i1 %1, label %"#block3", label %"#block4"

"#block3":                                        ; preds = %"#block2"
  call void @A.__autoConstruct__(%A* %a)
  call void @"A.construct(ref[A])"(%A* %a)
  %2 = getelementptr %A, %A* %a, i32 0, i32 0
  %3 = load i32, i32* %2
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"#anonymous1", i32 0, i32 0), i32 %3)
  %5 = load i32, i32* %i
  %6 = sub nsw i32 %5, 1
  store i32 %6, i32* %i
  call void @"A.destruct(ptr[A])"(%A* %a)
  call void @A.__autoDestruct__(%A* %a)
  br label %"#block2"

"#block4":                                        ; preds = %"#block2"
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"#anonymous3", i32 0, i32 0))
  ret void
}

define void @A.__autoConstruct__(%A* %this) {
"#block5":
  ret void
}

define void @A.__autoDestruct__(%A* %this) {
"#block6":
  ret void
}

define void @"A.construct(ref[A])"(%A* %this) {
"#block7":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"#anonymous0", i32 0, i32 0))
  %1 = load %A*, %A** %this1
  %2 = getelementptr %A, %A* %1, i32 0, i32 0
  store i32 1, i32* %2
  ret void
}

declare i32 @printf(i8*, ...)

define void @"A.destruct(ptr[A])"(%A* %this) {
"#block8":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = load %A*, %A** %this1
  %1 = getelementptr %A, %A* %0, i32 0, i32 0
  store i32 0, i32* %1
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"#anonymous2", i32 0, i32 0))
  ret void
}
------------------------------------------------------------
-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"

%A = type { i32 }

@"#anonymous0" = private constant [14 x i8] c"constructed!\0A\00", align 1
@"#anonymous1" = private constant [15 x i8] c"testBreak: %d\0A\00", align 1
@"#anonymous2" = private constant [13 x i8] c"destructed!\0A\00", align 1
@"#anonymous3" = private constant [18 x i8] c"testBreak-after.\0A\00", align 1
@"#anonymous4" = private constant [26 x i8] c"testBreak-nested: %d, %d\0A\00", align 1
@"#anonymous5" = private constant [23 x i8] c"testBreak-afterOuter.\0A\00", align 1
@"#anonymous6" = private constant [16 x i8] c"testBreak-out.\0A\00", align 1

define void @__constructor__() {
"#block0":
  ret void
}

define void @"testBreak()"() {
"#block1":
  %a = alloca %A
  br label %"#block2"

"#block2":                                        ; preds = %"#block10", %"#block1"
  br i1 true, label %"#block3", label %"#block4"

"#block3":                                        ; preds = %"#block2"
  call void @A.__autoConstruct__(%A* %a)
  call void @"A.construct(ref[A])"(%A* %a)
  %0 = getelementptr %A, %A* %a, i32 0, i32 0
  %1 = load i32, i32* %0
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"#anonymous1", i32 0, i32 0), i32 %1)
  br i1 true, label %"#block8", label %"#block10"

"#block4":                                        ; preds = %"#block2", %"#block8"
  %a1 = alloca %A
  %b = alloca %A
  br label %"#block11"

"#block8":                                        ; preds = %"#block3"
  call void @"A.destruct(ptr[A])"(%A* %a)
  call void @A.__autoDestruct__(%A* %a)
  br label %"#block4"

"#block10":                                       ; preds = %"#block3"
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"#anonymous3", i32 0, i32 0))
  call void @"A.destruct(ptr[A])"(%A* %a)
  call void @A.__autoDestruct__(%A* %a)
  br label %"#block2"

"#block11":                                       ; preds = %"#block16", %"#block4"
  br i1 true, label %"#block12", label %"#block13"

"#block12":                                       ; preds = %"#block11"
  call void @A.__autoConstruct__(%A* %a1)
  call void @"A.construct(ref[A])"(%A* %a1)
  br label %"#block14"

"#block13":                                       ; preds = %"#block11", %"#block15"
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"#anonymous6", i32 0, i32 0))
  ret void

"#block14":                                       ; preds = %"#block12"
  br i1 true, label %"#block15", label %"#block16"

"#block15":                                       ; preds = %"#block14"
  call void @A.__autoConstruct__(%A* %b)
  call void @"A.construct(ref[A])"(%A* %b)
  %5 = getelementptr %A, %A* %a1, i32 0, i32 0
  %6 = getelementptr %A, %A* %b, i32 0, i32 0
  %7 = load i32, i32* %5
  %8 = load i32, i32* %6
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"#anonymous4", i32 0, i32 0), i32 %7, i32 %8)
  call void @"A.destruct(ptr[A])"(%A* %a1)
  call void @A.__autoDestruct__(%A* %a1)
  call void @"A.destruct(ptr[A])"(%A* %b)
  call void @A.__autoDestruct__(%A* %b)
  br label %"#block13"

"#block16":                                       ; preds = %"#block14"
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"#anonymous5", i32 0, i32 0))
  call void @"A.destruct(ptr[A])"(%A* %a1)
  call void @A.__autoDestruct__(%A* %a1)
  br label %"#block11"
}

define void @A.__autoConstruct__(%A* %this) {
"#block5":
  ret void
}

define void @A.__autoDestruct__(%A* %this) {
"#block6":
  ret void
}

define void @"A.construct(ref[A])"(%A* %this) {
"#block7":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"#anonymous0", i32 0, i32 0))
  %1 = load %A*, %A** %this1
  %2 = getelementptr %A, %A* %1, i32 0, i32 0
  store i32 1, i32* %2
  ret void
}

declare i32 @printf(i8*, ...)

define void @"A.destruct(ptr[A])"(%A* %this) {
"#block9":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = load %A*, %A** %this1
  %1 = getelementptr %A, %A* %0, i32 0, i32 0
  store i32 0, i32* %1
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"#anonymous2", i32 0, i32 0))
  ret void
}
------------------------------------------------------------
-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"

%A = type { i32 }

@"#anonymous0" = private constant [14 x i8] c"constructed!\0A\00", align 1
@"#anonymous1" = private constant [18 x i8] c"testContinue: %d\0A\00", align 1
@"#anonymous2" = private constant [13 x i8] c"destructed!\0A\00", align 1
@"#anonymous3" = private constant [21 x i8] c"testContinue-after.\0A\00", align 1
@"#anonymous4" = private constant [29 x i8] c"testContinue-nested: %d, %d\0A\00", align 1
@"#anonymous5" = private constant [26 x i8] c"testContinue-afterOuter.\0A\00", align 1
@"#anonymous6" = private constant [19 x i8] c"testContinue-out.\0A\00", align 1

define void @__constructor__() {
"#block0":
  ret void
}

define void @"testContinue()"() {
"#block1":
  %i = alloca i32
  store i32 0, i32* %i
  %a = alloca %A
  br label %"#block2"

"#block2":                                        ; preds = %"#block3", %"#block1"
  %0 = load i32, i32* %i
  %1 = icmp slt i32 %0, 1
  br i1 %1, label %"#block4", label %"#block5"

"#block3":                                        ; preds = %"#block11", %"#block9"
  %2 = load i32, i32* %i
  %3 = add nsw i32 %2, 1
  store i32 %3, i32* %i
  br label %"#block2"

"#block4":                                        ; preds = %"#block2"
  call void @A.__autoConstruct__(%A* %a)
  call void @"A.construct(ref[A])"(%A* %a)
  %4 = getelementptr %A, %A* %a, i32 0, i32 0
  %5 = load i32, i32* %4
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"#anonymous1", i32 0, i32 0), i32 %5)
  %7 = load i32, i32* %i
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %"#block9", label %"#block11"

"#block5":                                        ; preds = %"#block2"
  store i32 0, i32* %i
  %a1 = alloca %A
  %b = alloca %A
  br label %"#block12"

"#block9":                                        ; preds = %"#block4"
  call void @"A.destruct(ptr[A])"(%A* %a)
  call void @A.__autoDestruct__(%A* %a)
  br label %"#block3"

"#block11":                                       ; preds = %"#block4"
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"#anonymous3", i32 0, i32 0))
  call void @"A.destruct(ptr[A])"(%A* %a)
  call void @A.__autoDestruct__(%A* %a)
  br label %"#block3"

"#block12":                                       ; preds = %"#block13", %"#block5"
  %10 = load i32, i32* %i
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %"#block14", label %"#block15"

"#block13":                                       ; preds = %"#block18", %"#block17"
  %12 = load i32, i32* %i
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %i
  br label %"#block12"

"#block14":                                       ; preds = %"#block12"
  call void @A.__autoConstruct__(%A* %a1)
  call void @"A.construct(ref[A])"(%A* %a1)
  br label %"#block16"

"#block15":                                       ; preds = %"#block12"
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @"#anonymous6", i32 0, i32 0))
  ret void

"#block16":                                       ; preds = %"#block14"
  br i1 true, label %"#block17", label %"#block18"

"#block17":                                       ; preds = %"#block16"
  call void @A.__autoConstruct__(%A* %b)
  call void @"A.construct(ref[A])"(%A* %b)
  %15 = getelementptr %A, %A* %a1, i32 0, i32 0
  %16 = getelementptr %A, %A* %b, i32 0, i32 0
  %17 = load i32, i32* %15
  %18 = load i32, i32* %16
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @"#anonymous4", i32 0, i32 0), i32 %17, i32 %18)
  call void @"A.destruct(ptr[A])"(%A* %a1)
  call void @A.__autoDestruct__(%A* %a1)
  call void @"A.destruct(ptr[A])"(%A* %b)
  call void @A.__autoDestruct__(%A* %b)
  br label %"#block13"

"#block18":                                       ; preds = %"#block16"
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @"#anonymous5", i32 0, i32 0))
  call void @"A.destruct(ptr[A])"(%A* %a1)
  call void @A.__autoDestruct__(%A* %a1)
  br label %"#block13"
}

define void @A.__autoConstruct__(%A* %this) {
"#block6":
  ret void
}

define void @A.__autoDestruct__(%A* %this) {
"#block7":
  ret void
}

define void @"A.construct(ref[A])"(%A* %this) {
"#block8":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"#anonymous0", i32 0, i32 0))
  %1 = load %A*, %A** %this1
  %2 = getelementptr %A, %A* %1, i32 0, i32 0
  store i32 1, i32* %2
  ret void
}

declare i32 @printf(i8*, ...)

define void @"A.destruct(ptr[A])"(%A* %this) {
"#block10":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = load %A*, %A** %this1
  %1 = getelementptr %A, %A* %0, i32 0, i32 0
  store i32 0, i32* %1
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"#anonymous2", i32 0, i32 0))
  ret void
}
------------------------------------------------------------
-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"

%B = type { %A, %A }
%A = type { i32 }

@"#anonymous0" = private constant [14 x i8] c"constructed!\0A\00", align 1
@"#anonymous1" = private constant [13 x i8] c"destructed!\0A\00", align 1
@"#anonymous2" = private constant [22 x i8] c"testAutoInit: %d, %d\0A\00", align 1

define void @__constructor__() {
"#block0":
  ret void
}

define void @"testAutoInit()"() {
"#block1":
  %b = alloca %B
  call void @B.__autoConstruct__(%B* %b)
  %0 = getelementptr %B, %B* %b, i32 0, i32 0
  %1 = getelementptr %A, %A* %0, i32 0, i32 0
  %2 = getelementptr %B, %B* %b, i32 0, i32 1
  %3 = getelementptr %A, %A* %2, i32 0, i32 0
  %4 = load i32, i32* %1
  %5 = load i32, i32* %3
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"#anonymous2", i32 0, i32 0), i32 %4, i32 %5)
  call void @B.__autoDestruct__(%B* %b)
  ret void
}

define void @A.__autoConstruct__(%A* %this) {
"#block2":
  ret void
}

define void @A.__autoDestruct__(%A* %this) {
"#block3":
  ret void
}

define void @B.__autoConstruct__(%B* %this) {
"#block4":
  %0 = getelementptr %B, %B* %this, i32 0, i32 0
  call void @A.__autoConstruct__(%A* %0)
  call void @"A.construct(ref[A])"(%A* %0)
  %1 = getelementptr %B, %B* %this, i32 0, i32 1
  call void @A.__autoConstruct__(%A* %1)
  call void @"A.construct(ref[A])"(%A* %1)
  ret void
}

define void @"A.construct(ref[A])"(%A* %this) {
"#block5":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"#anonymous0", i32 0, i32 0))
  %1 = load %A*, %A** %this1
  %2 = getelementptr %A, %A* %1, i32 0, i32 0
  store i32 1, i32* %2
  ret void
}

declare i32 @printf(i8*, ...)

define void @B.__autoDestruct__(%B* %this) {
"#block6":
  %0 = getelementptr %B, %B* %this, i32 0, i32 0
  call void @"A.destruct(ptr[A])"(%A* %0)
  call void @A.__autoDestruct__(%A* %0)
  %1 = getelementptr %B, %B* %this, i32 0, i32 1
  call void @"A.destruct(ptr[A])"(%A* %1)
  call void @A.__autoDestruct__(%A* %1)
  ret void
}

define void @"A.destruct(ptr[A])"(%A* %this) {
"#block7":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = load %A*, %A** %this1
  %1 = getelementptr %A, %A* %0, i32 0, i32 0
  store i32 0, i32* %1
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"#anonymous1", i32 0, i32 0))
  ret void
}
------------------------------------------------------------
-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"

%C = type { i32 }

@"#anonymous0" = private constant [16 x i8] c"C constructed!\0A\00", align 1
@"#anonymous1" = private constant [21 x i8] c"testInlinedInit: %d\0A\00", align 1

define void @__constructor__() {
"#block0":
  ret void
}

define void @"testInlinedInit()"() {
"#block1":
  %gc = alloca %C
  call void @C.__autoConstruct__(%C* %gc)
  %0 = getelementptr %C, %C* %gc, i32 0, i32 0
  %1 = load i32, i32* %0
  %2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @"#anonymous1", i32 0, i32 0), i32 %1)
  ret void
}

define void @C.__autoConstruct__(%C* %this) {
"#block2":
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"#anonymous0", i32 0, i32 0))
  %1 = getelementptr %C, %C* %this, i32 0, i32 0
  store i32 3, i32* %1
  ret void
}

declare i32 @printf(i8*, ...)
------------------------------------------------------------
