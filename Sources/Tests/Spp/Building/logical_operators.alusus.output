ERROR SPPG1013 @ (40,8): Invalid operand of logical operator.
ERROR SPPG1013 @ (41,17): Invalid operand of logical operator.
ERROR SPPG1013 @ (64,8): Invalid operand of logical operator.
ERROR SPPG1013 @ (65,17): Invalid operand of logical operator.
ERROR SPPG1015 @ (90,8): Incompatible types for the given operator.
ERROR SPPG1015 @ (91,8): Incompatible types for the given operator.
ERROR SPPG1015 @ (94,8): Incompatible types for the given operator.
ERROR SPPG1015 @ (95,8): Incompatible types for the given operator.
ERROR SPPG1015 @ (98,9): Incompatible types for the given operator.
ERROR SPPG1015 @ (99,9): Incompatible types for the given operator.
Build Failed...
--------------------- Partial LLVM IR ----------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"

@"#anonymous0" = private constant [4 x i8] c"%s\0A\00", align 1
@"#anonymous1" = private constant [11 x i8] c"dual check\00", align 1
@"#anonymous2" = private constant [20 x i8] c"binary type check 1\00", align 1
@"#anonymous3" = private constant [20 x i8] c"binary type check 2\00", align 1
@"#anonymous4" = private constant [14 x i8] c"tripple check\00", align 1
@"#anonymous5" = private constant [11 x i8] c"dual check\00", align 1
@"#anonymous6" = private constant [20 x i8] c"binary type check 1\00", align 1
@"#anonymous7" = private constant [20 x i8] c"binary type check 2\00", align 1
@"#anonymous8" = private constant [14 x i8] c"tripple check\00", align 1
@"#anonymous9" = private constant [16 x i8] c"Or of two ands.\00", align 1
@"#anonymous10" = private constant [16 x i8] c"And of two ors.\00", align 1
@"#anonymous11" = private constant [6 x i8] c"not b\00", align 1
@"#anonymous12" = private constant [5 x i8] c"!! b\00", align 1

declare i64 @printf(i8*, ...)

define void @"Main.print(ptr[Word[8]])=>(Void)"(i8* %str) {
"#block0":
  %str1 = alloca i8*
  store i8* %str, i8** %str1
  %0 = load i8*, i8** %str1
  %1 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"#anonymous0", i32 0, i32 0), i8* %0)
  ret void
}

define void @"Main.main()=>(Void)"() {
"#block1":
  call void @"Main.testMixed()=>(Void)"()
  ret void
}

define void @"Main.testOr()=>(Void)"() {
"#block2":
  %i = alloca i32
  %j = alloca i32
  %b = alloca i1
  store i32 5, i32* %i
  store i32 10, i32* %j
  store i1 true, i1* %b
  %0 = load i32, i32* %i
  %1 = icmp sgt i32 %0, 6
  br i1 %1, label %"#block5", label %"#block4"

"#block3":                                        ; preds = %"#block5"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"#anonymous1", i32 0, i32 0))
  br label %"#block6"

"#block4":                                        ; preds = %"#block2"
  %2 = load i32, i32* %j
  %3 = icmp sgt i32 %2, 10
  br label %"#block5"

"#block5":                                        ; preds = %"#block2", %"#block4"
  %4 = phi i1 [ %1, %"#block2" ], [ %3, %"#block4" ]
  br i1 %4, label %"#block3", label %"#block6"

"#block6":                                        ; preds = %"#block5", %"#block3"
  %5 = load i32, i32* %i
  %6 = icmp sgt i32 %5, 6
  br i1 %6, label %"#block9", label %"#block8"

"#block7":                                        ; preds = %"#block9"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"#anonymous2", i32 0, i32 0))
  br label %"#block10"

"#block8":                                        ; preds = %"#block6"
  %7 = load i1, i1* %b
  br label %"#block9"

"#block9":                                        ; preds = %"#block6", %"#block8"
  %8 = phi i1 [ %6, %"#block6" ], [ %7, %"#block8" ]
  br i1 %8, label %"#block7", label %"#block10"

"#block10":                                       ; preds = %"#block9", %"#block7"
  %9 = load i1, i1* %b
  br i1 %9, label %"#block13", label %"#block12"

"#block11":                                       ; preds = %"#block13"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"#anonymous3", i32 0, i32 0))
  br label %"#block14"

"#block12":                                       ; preds = %"#block10"
  %10 = load i32, i32* %i
  %11 = icmp sgt i32 %10, 6
  br label %"#block13"

"#block13":                                       ; preds = %"#block10", %"#block12"
  %12 = phi i1 [ %9, %"#block10" ], [ %11, %"#block12" ]
  br i1 %12, label %"#block11", label %"#block14"

"#block14":                                       ; preds = %"#block13", %"#block11"
  %13 = load i32, i32* %i
  %14 = icmp sgt i32 %13, 6
  br i1 %14, label %"#block18", label %"#block17"

"#block15":                                       ; preds = %"#block19"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"#anonymous4", i32 0, i32 0))
  br label %"#block20"

"#block16":                                       ; preds = %"#block18"
  %15 = load i1, i1* %b
  br label %"#block19"

"#block17":                                       ; preds = %"#block14"
  %16 = load i32, i32* %j
  %17 = icmp sgt i32 %16, 10
  br label %"#block18"

"#block18":                                       ; preds = %"#block14", %"#block17"
  %18 = phi i1 [ %14, %"#block14" ], [ %17, %"#block17" ]
  br i1 %18, label %"#block19", label %"#block16"

"#block19":                                       ; preds = %"#block18", %"#block16"
  %19 = phi i1 [ %18, %"#block18" ], [ %15, %"#block16" ]
  br i1 %19, label %"#block15", label %"#block20"

"#block20":                                       ; preds = %"#block19", %"#block15"
  %20 = load i32, i32* %i
  %21 = icmp sgt i32 %20, 6
  br i1 %21, label %"#block22", label %"#block21"

"#block21":                                       ; preds = %"#block20"
  %22 = load i32, i32* %j
  %23 = icmp sgt i32 %22, 10
  br label %"#block22"

"#block22":                                       ; preds = %"#block20", %"#block21"
  %24 = phi i1 [ %21, %"#block20" ], [ %23, %"#block21" ]
  store i1 %24, i1* %b
  %25 = load i32, i32* %i
  %26 = icmp sgt i32 %25, 6
  br i1 %26, label %"#block25", label %"#block24"

"#block23":                                       ; preds = %"#block25"
  %27 = load i32, i32* %i
  %28 = load i32, i32* %j
  %29 = icmp eq i32 %27, %28
  br label %"#block26"

"#block24":                                       ; preds = %"#block22"
  %30 = load i32, i32* %j
  %31 = icmp sgt i32 %30, 10
  br label %"#block25"

"#block25":                                       ; preds = %"#block22", %"#block24"
  %32 = phi i1 [ %26, %"#block22" ], [ %31, %"#block24" ]
  br i1 %32, label %"#block26", label %"#block23"

"#block26":                                       ; preds = %"#block25", %"#block23"
  %33 = phi i1 [ %32, %"#block25" ], [ %29, %"#block23" ]
  store i1 %33, i1* %b
  %34 = load i32, i32* %i
  %35 = icmp sgt i32 %34, 6
  ret void

"#block27":                                       ; No predecessors!

"#block28":                                       ; No predecessors!

"#block29":                                       ; No predecessors!

"#block30":                                       ; No predecessors!
}

define void @"Main.testAnd()=>(Void)"() {
"#block31":
  %i = alloca i32
  %j = alloca i32
  %b = alloca i1
  store i32 5, i32* %i
  store i32 10, i32* %j
  store i1 true, i1* %b
  %0 = load i32, i32* %i
  %1 = icmp sgt i32 %0, 6
  br i1 %1, label %"#block33", label %"#block34"

"#block32":                                       ; preds = %"#block34"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"#anonymous5", i32 0, i32 0))
  br label %"#block35"

"#block33":                                       ; preds = %"#block31"
  %2 = load i32, i32* %j
  %3 = icmp sgt i32 %2, 10
  br label %"#block34"

"#block34":                                       ; preds = %"#block31", %"#block33"
  %4 = phi i1 [ %1, %"#block31" ], [ %3, %"#block33" ]
  br i1 %4, label %"#block32", label %"#block35"

"#block35":                                       ; preds = %"#block34", %"#block32"
  %5 = load i32, i32* %i
  %6 = icmp sgt i32 %5, 6
  br i1 %6, label %"#block37", label %"#block38"

"#block36":                                       ; preds = %"#block38"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"#anonymous6", i32 0, i32 0))
  br label %"#block39"

"#block37":                                       ; preds = %"#block35"
  %7 = load i1, i1* %b
  br label %"#block38"

"#block38":                                       ; preds = %"#block35", %"#block37"
  %8 = phi i1 [ %6, %"#block35" ], [ %7, %"#block37" ]
  br i1 %8, label %"#block36", label %"#block39"

"#block39":                                       ; preds = %"#block38", %"#block36"
  %9 = load i1, i1* %b
  br i1 %9, label %"#block41", label %"#block42"

"#block40":                                       ; preds = %"#block42"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"#anonymous7", i32 0, i32 0))
  br label %"#block43"

"#block41":                                       ; preds = %"#block39"
  %10 = load i32, i32* %i
  %11 = icmp sgt i32 %10, 6
  br label %"#block42"

"#block42":                                       ; preds = %"#block39", %"#block41"
  %12 = phi i1 [ %9, %"#block39" ], [ %11, %"#block41" ]
  br i1 %12, label %"#block40", label %"#block43"

"#block43":                                       ; preds = %"#block42", %"#block40"
  %13 = load i32, i32* %i
  %14 = icmp sgt i32 %13, 6
  br i1 %14, label %"#block46", label %"#block47"

"#block44":                                       ; preds = %"#block48"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"#anonymous8", i32 0, i32 0))
  br label %"#block49"

"#block45":                                       ; preds = %"#block47"
  %15 = load i1, i1* %b
  br label %"#block48"

"#block46":                                       ; preds = %"#block43"
  %16 = load i32, i32* %j
  %17 = icmp sgt i32 %16, 10
  br label %"#block47"

"#block47":                                       ; preds = %"#block43", %"#block46"
  %18 = phi i1 [ %14, %"#block43" ], [ %17, %"#block46" ]
  br i1 %18, label %"#block45", label %"#block48"

"#block48":                                       ; preds = %"#block47", %"#block45"
  %19 = phi i1 [ %18, %"#block47" ], [ %15, %"#block45" ]
  br i1 %19, label %"#block44", label %"#block49"

"#block49":                                       ; preds = %"#block48", %"#block44"
  %20 = load i32, i32* %i
  %21 = icmp sgt i32 %20, 6
  br i1 %21, label %"#block50", label %"#block51"

"#block50":                                       ; preds = %"#block49"
  %22 = load i32, i32* %j
  %23 = icmp sgt i32 %22, 10
  br label %"#block51"

"#block51":                                       ; preds = %"#block49", %"#block50"
  %24 = phi i1 [ %21, %"#block49" ], [ %23, %"#block50" ]
  store i1 %24, i1* %b
  %25 = load i32, i32* %i
  %26 = icmp sgt i32 %25, 6
  br i1 %26, label %"#block53", label %"#block54"

"#block52":                                       ; preds = %"#block54"
  %27 = load i32, i32* %i
  %28 = load i32, i32* %j
  %29 = icmp eq i32 %27, %28
  br label %"#block55"

"#block53":                                       ; preds = %"#block51"
  %30 = load i32, i32* %j
  %31 = icmp sgt i32 %30, 10
  br label %"#block54"

"#block54":                                       ; preds = %"#block51", %"#block53"
  %32 = phi i1 [ %26, %"#block51" ], [ %31, %"#block53" ]
  br i1 %32, label %"#block52", label %"#block55"

"#block55":                                       ; preds = %"#block54", %"#block52"
  %33 = phi i1 [ %32, %"#block54" ], [ %29, %"#block52" ]
  store i1 %33, i1* %b
  %34 = load i32, i32* %i
  %35 = icmp sgt i32 %34, 6
  ret void

"#block56":                                       ; No predecessors!

"#block57":                                       ; No predecessors!

"#block58":                                       ; No predecessors!

"#block59":                                       ; No predecessors!
}

define void @"Main.testMixed()=>(Void)"() {
"#block60":
  %i = alloca i32
  %j = alloca i32
  store i32 5, i32* %i
  store i32 10, i32* %j
  %0 = load i32, i32* %i
  %1 = icmp sgt i32 %0, 10
  br i1 %1, label %"#block63", label %"#block64"

"#block61":                                       ; preds = %"#block67"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"#anonymous9", i32 0, i32 0))
  br label %"#block68"

"#block62":                                       ; preds = %"#block64"
  %2 = load i32, i32* %i
  %3 = icmp slt i32 %2, 5
  br i1 %3, label %"#block65", label %"#block66"

"#block63":                                       ; preds = %"#block60"
  %4 = load i32, i32* %j
  %5 = icmp sgt i32 %4, 10
  br label %"#block64"

"#block64":                                       ; preds = %"#block60", %"#block63"
  %6 = phi i1 [ %1, %"#block60" ], [ %5, %"#block63" ]
  br i1 %6, label %"#block67", label %"#block62"

"#block65":                                       ; preds = %"#block62"
  %7 = load i32, i32* %j
  %8 = icmp slt i32 %7, 5
  br label %"#block66"

"#block66":                                       ; preds = %"#block62", %"#block65"
  %9 = phi i1 [ %3, %"#block62" ], [ %8, %"#block65" ]
  br label %"#block67"

"#block67":                                       ; preds = %"#block64", %"#block66"
  %10 = phi i1 [ %6, %"#block64" ], [ %9, %"#block66" ]
  br i1 %10, label %"#block61", label %"#block68"

"#block68":                                       ; preds = %"#block67", %"#block61"
  %11 = load i32, i32* %i
  %12 = icmp sgt i32 %11, 10
  br i1 %12, label %"#block72", label %"#block71"

"#block69":                                       ; preds = %"#block75"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"#anonymous10", i32 0, i32 0))
  br label %"#block76"

"#block70":                                       ; preds = %"#block72"
  %13 = load i32, i32* %i
  %14 = icmp slt i32 %13, 5
  br i1 %14, label %"#block74", label %"#block73"

"#block71":                                       ; preds = %"#block68"
  %15 = load i32, i32* %j
  %16 = icmp sgt i32 %15, 10
  br label %"#block72"

"#block72":                                       ; preds = %"#block68", %"#block71"
  %17 = phi i1 [ %12, %"#block68" ], [ %16, %"#block71" ]
  br i1 %17, label %"#block70", label %"#block75"

"#block73":                                       ; preds = %"#block70"
  %18 = load i32, i32* %j
  %19 = icmp slt i32 %18, 5
  br label %"#block74"

"#block74":                                       ; preds = %"#block70", %"#block73"
  %20 = phi i1 [ %14, %"#block70" ], [ %19, %"#block73" ]
  br label %"#block75"

"#block75":                                       ; preds = %"#block72", %"#block74"
  %21 = phi i1 [ %17, %"#block72" ], [ %20, %"#block74" ]
  br i1 %21, label %"#block69", label %"#block76"

"#block76":                                       ; preds = %"#block75", %"#block69"
  ret void
}

define void @"Main.testNot()=>(Void)"() {
"#block77":
  %b = alloca i1
  %i = alloca i32
  %f = alloca float
  store i1 true, i1* %b
  store i32 10, i32* %i
  store float 5.000000e+00, float* %f
  %0 = load i1, i1* %b
  %1 = xor i1 %0, true
  br i1 %1, label %"#block78", label %"#block79"

"#block78":                                       ; preds = %"#block77"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"#anonymous11", i32 0, i32 0))
  br label %"#block79"

"#block79":                                       ; preds = %"#block77", %"#block78"
  %2 = load i32, i32* %i
  %3 = load float, float* %f
  %4 = load i1, i1* %b
  %5 = xor i1 %4, true
  br i1 %5, label %"#block82", label %"#block83"

"#block80":                                       ; No predecessors!

"#block81":                                       ; No predecessors!

"#block82":                                       ; preds = %"#block79"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"#anonymous12", i32 0, i32 0))
  br label %"#block83"

"#block83":                                       ; preds = %"#block79", %"#block82"
  %6 = load i32, i32* %i
  %7 = load float, float* %f
  %8 = load i32, i32* %i
  %9 = xor i32 %8, -1
  store i32 %9, i32* %i
  %10 = load i32, i32* %i
  %11 = load i32, i32* %i
  ret void

"#block84":                                       ; No predecessors!

"#block85":                                       ; No predecessors!
}
------------------------------------------------------------
