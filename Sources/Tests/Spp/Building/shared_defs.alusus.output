ERROR SPPG1019 @ (23,25): Invalid access to object member.
ERROR SPPG1019 @ (24,25): Invalid access to object member.
ERROR SPPG1019 @ (37,12): Invalid access to object member.
ERROR SPPG1020 @ (38,7): Invalid access to global definition.
Build Failed...
--------------------- Partial LLVM IR ----------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%Main_MyType = type { i32, [1 x i32] }
%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }

@Main.t = global %Main_MyType zeroinitializer
@Main.MyType.y = global i32 0
@Main.MyType.t = global %Main_MyType zeroinitializer
@"Main.MyType.printIt().z" = global i32 0
@"#anonymous0" = private constant [8 x i8] c"x = %d\0A\00"
@"#anonymous1" = private constant [8 x i8] c"x = %d\0A\00"
@"#anonymous2" = private constant [8 x i8] c"y = %d\0A\00"
@"#anonymous3" = private constant [10 x i8] c"t.x = %d\0A\00"
@"#anonymous4" = private constant [8 x i8] c"z = %d\0A\00"
@llvm.global_ctors = appending constant [1 x %LlvmGlobalCtorDtor] [%LlvmGlobalCtorDtor { i32 0, void ()* @__entry__, i32* null }]
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @__entry__() {
"#block0":
  ret void
}

define void @"Main.MyType.printIt()"() {
"#block1":
  %0 = load i32, i32* @Main.MyType.y
  %1 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"#anonymous2", i32 0, i32 0), i32 %0)
  %2 = load i32, i32* getelementptr inbounds (%Main_MyType, %Main_MyType* @Main.MyType.t, i32 0, i32 0)
  %3 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"#anonymous3", i32 0, i32 0), i32 %2)
  %4 = load i32, i32* @"Main.MyType.printIt().z"
  %5 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"#anonymous4", i32 0, i32 0), i32 %4)
  %6 = load i32, i32* @"Main.MyType.printIt().z"
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* @"Main.MyType.printIt().z"
  ret void
}

declare i64 @printf(i8*, ...)

define void @"Main.start()=>(Void)"() {
"#block2":
  store i32 4, i32* @Main.MyType.y
  store i32 23, i32* getelementptr inbounds (%Main_MyType, %Main_MyType* @Main.MyType.t, i32 0, i32 0)
  call void @"Main.MyType.printIt()"()
  call void @"Main.MyType.printIt()"()
  ret void
}
------------------------------------------------------------
