[0;31mERROR SPPG1013: Invalid operand of logical operator.[0m
  logical_operators_test.alusus (40,8)
[0;31mERROR SPPG1013: Invalid operand of logical operator.[0m
  logical_operators_test.alusus (41,17)
[0;31mERROR SPPG1013: Invalid operand of logical operator.[0m
  logical_operators_test.alusus (64,8)
[0;31mERROR SPPG1013: Invalid operand of logical operator.[0m
  logical_operators_test.alusus (65,17)
[0;31mERROR SPPG1013: Invalid operand of logical operator.[0m
  logical_operators_test.alusus (103,8)
[0;31mERROR SPPG1013: Invalid operand of logical operator.[0m
  logical_operators_test.alusus (104,8)
[0;31mERROR SPPG1013: Invalid operand of logical operator.[0m
  logical_operators_test.alusus (106,8)
[0;31mERROR SPPG1013: Invalid operand of logical operator.[0m
  logical_operators_test.alusus (109,8)
[0;31mERROR SPPG1013: Invalid operand of logical operator.[0m
  logical_operators_test.alusus (110,8)
[0;31mERROR SPPG1013: Invalid operand of logical operator.[0m
  logical_operators_test.alusus (112,8)
[0;31mERROR SPPG1013: Invalid operand of logical operator.[0m
  logical_operators_test.alusus (115,9)
[0;31mERROR SPPG1013: Invalid operand of logical operator.[0m
  logical_operators_test.alusus (116,9)
Build Failed...
--------------------- Partial LLVM IR ----------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }
%Main_BoolCastable = type { i32 }
%Main_BoolNotCastable = type { i32 }
%Main_Obj = type { i1 }

@"#anonymous0" = private constant [4 x i8] c"%s\0A\00"
@"#anonymous1" = private constant [11 x i8] c"dual check\00"
@"#anonymous2" = private constant [20 x i8] c"binary type check 1\00"
@"#anonymous3" = private constant [20 x i8] c"binary type check 2\00"
@"#anonymous4" = private constant [14 x i8] c"tripple check\00"
@"#anonymous5" = private constant [11 x i8] c"dual check\00"
@"#anonymous6" = private constant [20 x i8] c"binary type check 1\00"
@"#anonymous7" = private constant [20 x i8] c"binary type check 2\00"
@"#anonymous8" = private constant [14 x i8] c"tripple check\00"
@"#anonymous9" = private constant [16 x i8] c"Or of two ands.\00"
@"#anonymous10" = private constant [16 x i8] c"And of two ors.\00"
@"#anonymous11" = private constant [6 x i8] c"not b\00"
@"#anonymous12" = private constant [7 x i8] c"not bc\00"
@"#anonymous13" = private constant [5 x i8] c"!! b\00"
@"#anonymous14" = private constant [6 x i8] c"!! bc\00"
@"#anonymous15" = private constant [12 x i8] c"or temp var\00"
@"#anonymous16" = private constant [13 x i8] c"and temp var\00"
@llvm.global_ctors = appending constant [1 x %LlvmGlobalCtorDtor] [%LlvmGlobalCtorDtor { i32 0, void ()* @__entry__, i32* null }]
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @__entry__() {
"#block0":
  ret void
}

declare i64 @printf(i8*, ...)

define void @"Main.print(ptr[Word[8]])=>(Void)"(i8* %str) {
"#block1":
  %str1 = alloca i8*
  store i8* %str, i8** %str1
  %0 = load i8*, i8** %str1
  %1 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"#anonymous0", i32 0, i32 0), i8* %0)
  ret void
}

define void @"Main.main()=>(Void)"() {
"#block2":
  call void @"Main.testOr()=>(Void)"()
  call void @"Main.testAnd()=>(Void)"()
  call void @"Main.testMixed()=>(Void)"()
  call void @"Main.testNot()=>(Void)"()
  ret void
}

define void @"Main.testOr()=>(Void)"() {
"#block3":
  %i = alloca i32
  %j = alloca i32
  %b = alloca i1
  store i32 5, i32* %i
  store i32 10, i32* %j
  store i1 true, i1* %b
  %0 = load i32, i32* %i
  %1 = icmp sgt i32 %0, 6
  br i1 %1, label %"#block6", label %"#block5"

"#block4":                                        ; preds = %"#block6"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"#anonymous1", i32 0, i32 0))
  br label %"#block7"

"#block5":                                        ; preds = %"#block3"
  %2 = load i32, i32* %j
  %3 = icmp sgt i32 %2, 10
  br label %"#block6"

"#block6":                                        ; preds = %"#block3", %"#block5"
  %4 = phi i1 [ %1, %"#block3" ], [ %3, %"#block5" ]
  br i1 %4, label %"#block4", label %"#block7"

"#block7":                                        ; preds = %"#block6", %"#block4"
  %5 = load i32, i32* %i
  %6 = icmp sgt i32 %5, 6
  br i1 %6, label %"#block10", label %"#block9"

"#block8":                                        ; preds = %"#block10"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"#anonymous2", i32 0, i32 0))
  br label %"#block11"

"#block9":                                        ; preds = %"#block7"
  %7 = load i1, i1* %b
  br label %"#block10"

"#block10":                                       ; preds = %"#block7", %"#block9"
  %8 = phi i1 [ %6, %"#block7" ], [ %7, %"#block9" ]
  br i1 %8, label %"#block8", label %"#block11"

"#block11":                                       ; preds = %"#block10", %"#block8"
  %9 = load i1, i1* %b
  br i1 %9, label %"#block14", label %"#block13"

"#block12":                                       ; preds = %"#block14"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"#anonymous3", i32 0, i32 0))
  br label %"#block15"

"#block13":                                       ; preds = %"#block11"
  %10 = load i32, i32* %i
  %11 = icmp sgt i32 %10, 6
  br label %"#block14"

"#block14":                                       ; preds = %"#block11", %"#block13"
  %12 = phi i1 [ %9, %"#block11" ], [ %11, %"#block13" ]
  br i1 %12, label %"#block12", label %"#block15"

"#block15":                                       ; preds = %"#block14", %"#block12"
  %13 = load i32, i32* %i
  %14 = icmp sgt i32 %13, 6
  br i1 %14, label %"#block19", label %"#block18"

"#block16":                                       ; preds = %"#block20"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"#anonymous4", i32 0, i32 0))
  br label %"#block21"

"#block17":                                       ; preds = %"#block19"
  %15 = load i1, i1* %b
  br label %"#block20"

"#block18":                                       ; preds = %"#block15"
  %16 = load i32, i32* %j
  %17 = icmp sgt i32 %16, 10
  br label %"#block19"

"#block19":                                       ; preds = %"#block15", %"#block18"
  %18 = phi i1 [ %14, %"#block15" ], [ %17, %"#block18" ]
  br i1 %18, label %"#block20", label %"#block17"

"#block20":                                       ; preds = %"#block19", %"#block17"
  %19 = phi i1 [ %18, %"#block19" ], [ %15, %"#block17" ]
  br i1 %19, label %"#block16", label %"#block21"

"#block21":                                       ; preds = %"#block20", %"#block16"
  %20 = load i32, i32* %i
  %21 = icmp sgt i32 %20, 6
  br i1 %21, label %"#block23", label %"#block22"

"#block22":                                       ; preds = %"#block21"
  %22 = load i32, i32* %j
  %23 = icmp sgt i32 %22, 10
  br label %"#block23"

"#block23":                                       ; preds = %"#block21", %"#block22"
  %24 = phi i1 [ %21, %"#block21" ], [ %23, %"#block22" ]
  store i1 %24, i1* %b
  %25 = load i32, i32* %i
  %26 = icmp sgt i32 %25, 6
  br i1 %26, label %"#block26", label %"#block25"

"#block24":                                       ; preds = %"#block26"
  %27 = load i32, i32* %i
  %28 = load i32, i32* %j
  %29 = icmp eq i32 %27, %28
  br label %"#block27"

"#block25":                                       ; preds = %"#block23"
  %30 = load i32, i32* %j
  %31 = icmp sgt i32 %30, 10
  br label %"#block26"

"#block26":                                       ; preds = %"#block23", %"#block25"
  %32 = phi i1 [ %26, %"#block23" ], [ %31, %"#block25" ]
  br i1 %32, label %"#block27", label %"#block24"

"#block27":                                       ; preds = %"#block26", %"#block24"
  %33 = phi i1 [ %32, %"#block26" ], [ %29, %"#block24" ]
  store i1 %33, i1* %b
  %34 = load i32, i32* %i
  %35 = load i32, i32* %i
  %36 = icmp sgt i32 %35, 6
  ret void

"#block28":                                       ; No predecessors!

"#block29":                                       ; No predecessors!

"#block30":                                       ; No predecessors!

"#block31":                                       ; No predecessors!
  %37 = load i32, i32* %j
}

define void @"Main.testAnd()=>(Void)"() {
"#block32":
  %i = alloca i32
  %j = alloca i32
  %b = alloca i1
  store i32 5, i32* %i
  store i32 10, i32* %j
  store i1 true, i1* %b
  %0 = load i32, i32* %i
  %1 = icmp sgt i32 %0, 6
  br i1 %1, label %"#block34", label %"#block35"

"#block33":                                       ; preds = %"#block35"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"#anonymous5", i32 0, i32 0))
  br label %"#block36"

"#block34":                                       ; preds = %"#block32"
  %2 = load i32, i32* %j
  %3 = icmp sgt i32 %2, 10
  br label %"#block35"

"#block35":                                       ; preds = %"#block32", %"#block34"
  %4 = phi i1 [ %1, %"#block32" ], [ %3, %"#block34" ]
  br i1 %4, label %"#block33", label %"#block36"

"#block36":                                       ; preds = %"#block35", %"#block33"
  %5 = load i32, i32* %i
  %6 = icmp sgt i32 %5, 6
  br i1 %6, label %"#block38", label %"#block39"

"#block37":                                       ; preds = %"#block39"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"#anonymous6", i32 0, i32 0))
  br label %"#block40"

"#block38":                                       ; preds = %"#block36"
  %7 = load i1, i1* %b
  br label %"#block39"

"#block39":                                       ; preds = %"#block36", %"#block38"
  %8 = phi i1 [ %6, %"#block36" ], [ %7, %"#block38" ]
  br i1 %8, label %"#block37", label %"#block40"

"#block40":                                       ; preds = %"#block39", %"#block37"
  %9 = load i1, i1* %b
  br i1 %9, label %"#block42", label %"#block43"

"#block41":                                       ; preds = %"#block43"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @"#anonymous7", i32 0, i32 0))
  br label %"#block44"

"#block42":                                       ; preds = %"#block40"
  %10 = load i32, i32* %i
  %11 = icmp sgt i32 %10, 6
  br label %"#block43"

"#block43":                                       ; preds = %"#block40", %"#block42"
  %12 = phi i1 [ %9, %"#block40" ], [ %11, %"#block42" ]
  br i1 %12, label %"#block41", label %"#block44"

"#block44":                                       ; preds = %"#block43", %"#block41"
  %13 = load i32, i32* %i
  %14 = icmp sgt i32 %13, 6
  br i1 %14, label %"#block47", label %"#block48"

"#block45":                                       ; preds = %"#block49"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @"#anonymous8", i32 0, i32 0))
  br label %"#block50"

"#block46":                                       ; preds = %"#block48"
  %15 = load i1, i1* %b
  br label %"#block49"

"#block47":                                       ; preds = %"#block44"
  %16 = load i32, i32* %j
  %17 = icmp sgt i32 %16, 10
  br label %"#block48"

"#block48":                                       ; preds = %"#block44", %"#block47"
  %18 = phi i1 [ %14, %"#block44" ], [ %17, %"#block47" ]
  br i1 %18, label %"#block46", label %"#block49"

"#block49":                                       ; preds = %"#block48", %"#block46"
  %19 = phi i1 [ %18, %"#block48" ], [ %15, %"#block46" ]
  br i1 %19, label %"#block45", label %"#block50"

"#block50":                                       ; preds = %"#block49", %"#block45"
  %20 = load i32, i32* %i
  %21 = icmp sgt i32 %20, 6
  br i1 %21, label %"#block51", label %"#block52"

"#block51":                                       ; preds = %"#block50"
  %22 = load i32, i32* %j
  %23 = icmp sgt i32 %22, 10
  br label %"#block52"

"#block52":                                       ; preds = %"#block50", %"#block51"
  %24 = phi i1 [ %21, %"#block50" ], [ %23, %"#block51" ]
  store i1 %24, i1* %b
  %25 = load i32, i32* %i
  %26 = icmp sgt i32 %25, 6
  br i1 %26, label %"#block54", label %"#block55"

"#block53":                                       ; preds = %"#block55"
  %27 = load i32, i32* %i
  %28 = load i32, i32* %j
  %29 = icmp eq i32 %27, %28
  br label %"#block56"

"#block54":                                       ; preds = %"#block52"
  %30 = load i32, i32* %j
  %31 = icmp sgt i32 %30, 10
  br label %"#block55"

"#block55":                                       ; preds = %"#block52", %"#block54"
  %32 = phi i1 [ %26, %"#block52" ], [ %31, %"#block54" ]
  br i1 %32, label %"#block53", label %"#block56"

"#block56":                                       ; preds = %"#block55", %"#block53"
  %33 = phi i1 [ %32, %"#block55" ], [ %29, %"#block53" ]
  store i1 %33, i1* %b
  %34 = load i32, i32* %i
  %35 = load i32, i32* %i
  %36 = icmp sgt i32 %35, 6
  ret void

"#block57":                                       ; No predecessors!

"#block58":                                       ; No predecessors!

"#block59":                                       ; No predecessors!

"#block60":                                       ; No predecessors!
  %37 = load i32, i32* %j
}

define void @"Main.testMixed()=>(Void)"() {
"#block61":
  %i = alloca i32
  %j = alloca i32
  store i32 5, i32* %i
  store i32 10, i32* %j
  %0 = load i32, i32* %i
  %1 = icmp sgt i32 %0, 10
  br i1 %1, label %"#block64", label %"#block65"

"#block62":                                       ; preds = %"#block68"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"#anonymous9", i32 0, i32 0))
  br label %"#block69"

"#block63":                                       ; preds = %"#block65"
  %2 = load i32, i32* %i
  %3 = icmp slt i32 %2, 5
  br i1 %3, label %"#block66", label %"#block67"

"#block64":                                       ; preds = %"#block61"
  %4 = load i32, i32* %j
  %5 = icmp sgt i32 %4, 10
  br label %"#block65"

"#block65":                                       ; preds = %"#block61", %"#block64"
  %6 = phi i1 [ %1, %"#block61" ], [ %5, %"#block64" ]
  br i1 %6, label %"#block68", label %"#block63"

"#block66":                                       ; preds = %"#block63"
  %7 = load i32, i32* %j
  %8 = icmp slt i32 %7, 5
  br label %"#block67"

"#block67":                                       ; preds = %"#block63", %"#block66"
  %9 = phi i1 [ %3, %"#block63" ], [ %8, %"#block66" ]
  br label %"#block68"

"#block68":                                       ; preds = %"#block65", %"#block67"
  %10 = phi i1 [ %6, %"#block65" ], [ %9, %"#block67" ]
  br i1 %10, label %"#block62", label %"#block69"

"#block69":                                       ; preds = %"#block68", %"#block62"
  %11 = load i32, i32* %i
  %12 = icmp sgt i32 %11, 10
  br i1 %12, label %"#block73", label %"#block72"

"#block70":                                       ; preds = %"#block76"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"#anonymous10", i32 0, i32 0))
  br label %"#block77"

"#block71":                                       ; preds = %"#block73"
  %13 = load i32, i32* %i
  %14 = icmp slt i32 %13, 5
  br i1 %14, label %"#block75", label %"#block74"

"#block72":                                       ; preds = %"#block69"
  %15 = load i32, i32* %j
  %16 = icmp sgt i32 %15, 10
  br label %"#block73"

"#block73":                                       ; preds = %"#block69", %"#block72"
  %17 = phi i1 [ %12, %"#block69" ], [ %16, %"#block72" ]
  br i1 %17, label %"#block71", label %"#block76"

"#block74":                                       ; preds = %"#block71"
  %18 = load i32, i32* %j
  %19 = icmp slt i32 %18, 5
  br label %"#block75"

"#block75":                                       ; preds = %"#block71", %"#block74"
  %20 = phi i1 [ %14, %"#block71" ], [ %19, %"#block74" ]
  br label %"#block76"

"#block76":                                       ; preds = %"#block73", %"#block75"
  %21 = phi i1 [ %17, %"#block73" ], [ %20, %"#block75" ]
  br i1 %21, label %"#block70", label %"#block77"

"#block77":                                       ; preds = %"#block76", %"#block70"
  ret void
}

define void @"Main.testNot()=>(Void)"() {
"#block78":
  %b = alloca i1
  %i = alloca i32
  %f = alloca float
  %bc = alloca %Main_BoolCastable
  %bnc = alloca %Main_BoolNotCastable
  store i1 true, i1* %b
  store i32 10, i32* %i
  store float 5.000000e+00, float* %f
  %0 = getelementptr %Main_BoolCastable, %Main_BoolCastable* %bc, i32 0, i32 0
  store i32 4, i32* %0
  %1 = getelementptr %Main_BoolNotCastable, %Main_BoolNotCastable* %bnc, i32 0, i32 0
  store i32 3, i32* %1
  %2 = load i1, i1* %b
  %3 = xor i1 %2, true
  br i1 %3, label %"#block79", label %"#block80"

"#block79":                                       ; preds = %"#block78"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"#anonymous11", i32 0, i32 0))
  br label %"#block80"

"#block80":                                       ; preds = %"#block78", %"#block79"
  %4 = load i32, i32* %i
  %5 = load float, float* %f
  %6 = call i1 @"Main.BoolCastable.~cast(ref[Main.BoolCastable])=>(Word[1])"(%Main_BoolCastable* %bc)
  %7 = xor i1 %6, true
  br i1 %7, label %"#block83", label %"#block84"

"#block81":                                       ; No predecessors!

"#block82":                                       ; No predecessors!

"#block83":                                       ; preds = %"#block80"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"#anonymous12", i32 0, i32 0))
  br label %"#block84"

"#block84":                                       ; preds = %"#block80", %"#block83"
  %8 = load %Main_BoolNotCastable, %Main_BoolNotCastable* %bnc
  %9 = load i1, i1* %b
  %10 = xor i1 %9, true
  br i1 %10, label %"#block86", label %"#block87"

"#block85":                                       ; No predecessors!

"#block86":                                       ; preds = %"#block84"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"#anonymous13", i32 0, i32 0))
  br label %"#block87"

"#block87":                                       ; preds = %"#block84", %"#block86"
  %11 = load i32, i32* %i
  %12 = load float, float* %f
  %13 = call i1 @"Main.BoolCastable.~cast(ref[Main.BoolCastable])=>(Word[1])"(%Main_BoolCastable* %bc)
  %14 = xor i1 %13, true
  br i1 %14, label %"#block90", label %"#block91"

"#block88":                                       ; No predecessors!

"#block89":                                       ; No predecessors!

"#block90":                                       ; preds = %"#block87"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"#anonymous14", i32 0, i32 0))
  br label %"#block91"

"#block91":                                       ; preds = %"#block87", %"#block90"
  %15 = load %Main_BoolNotCastable, %Main_BoolNotCastable* %bnc
  %16 = load i32, i32* %i
  %17 = xor i32 %16, -1
  store i32 %17, i32* %i
  %18 = load i32, i32* %i
  %19 = load i32, i32* %i
  ret void

"#block92":                                       ; No predecessors!
}

define i1 @"Main.BoolCastable.~cast(ref[Main.BoolCastable])=>(Word[1])"(%Main_BoolCastable* %this) {
"#block103":
  %this1 = alloca %Main_BoolCastable*
  store %Main_BoolCastable* %this, %Main_BoolCastable** %this1
  %0 = load %Main_BoolCastable*, %Main_BoolCastable** %this1
  %1 = getelementptr %Main_BoolCastable, %Main_BoolCastable* %0, i32 0, i32 0
  %2 = load i32, i32* %1
  %3 = icmp eq i32 %2, 5
  ret i1 %3
}

define void @"Main.getObj()=>(Main.Obj)"(%Main_Obj* %"#ret") {
"#block93":
  %"#temp0" = alloca %Main_Obj
  call void @"Main.Obj.~init(ref[Main.Obj])"(%Main_Obj* %"#temp0")
  call void @"Main.Obj.~init(ref[Main.Obj],ref[Main.Obj])"(%Main_Obj* %"#ret", %Main_Obj* %"#temp0")
  call void @"Main.Obj.~terminate(ref[Main.Obj])"(%Main_Obj* %"#temp0")
  ret void
}

define void @"Main.Obj.~init(ref[Main.Obj])"(%Main_Obj* %this) {
"#block104":
  %this1 = alloca %Main_Obj*
  store %Main_Obj* %this, %Main_Obj** %this1
  ret void
}

define void @"Main.Obj.~init(ref[Main.Obj],ref[Main.Obj])"(%Main_Obj* %this, %Main_Obj* %value) {
"#block105":
  %this1 = alloca %Main_Obj*
  store %Main_Obj* %this, %Main_Obj** %this1
  %value2 = alloca %Main_Obj*
  store %Main_Obj* %value, %Main_Obj** %value2
  ret void
}

define void @"Main.Obj.~terminate(ref[Main.Obj])"(%Main_Obj* %this) {
"#block106":
  %this1 = alloca %Main_Obj*
  store %Main_Obj* %this, %Main_Obj** %this1
  ret void
}

define void @"Main.testTempVars()"() {
"#block94":
  %i = alloca i32
  store i32 0, i32* %i
  %0 = load i32, i32* %i
  %1 = icmp ne i32 %0, 5
  %"#temp1" = alloca %Main_Obj
  br i1 %1, label %"#block97", label %"#block96"

"#block95":                                       ; preds = %"#block97"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"#anonymous15", i32 0, i32 0))
  br label %"#block98"

"#block96":                                       ; preds = %"#block94"
  call void @"Main.getObj()=>(Main.Obj)"(%Main_Obj* %"#temp1")
  %2 = getelementptr %Main_Obj, %Main_Obj* %"#temp1", i32 0, i32 0
  %3 = load i1, i1* %2
  call void @"Main.Obj.~terminate(ref[Main.Obj])"(%Main_Obj* %"#temp1")
  br label %"#block97"

"#block97":                                       ; preds = %"#block94", %"#block96"
  %4 = phi i1 [ %1, %"#block94" ], [ %3, %"#block96" ]
  br i1 %4, label %"#block95", label %"#block98"

"#block98":                                       ; preds = %"#block97", %"#block95"
  %5 = load i32, i32* %i
  %6 = icmp ne i32 %5, 5
  %"#temp2" = alloca %Main_Obj
  br i1 %6, label %"#block100", label %"#block101"

"#block99":                                       ; preds = %"#block101"
  call void @"Main.print(ptr[Word[8]])=>(Void)"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"#anonymous16", i32 0, i32 0))
  br label %"#block102"

"#block100":                                      ; preds = %"#block98"
  call void @"Main.getObj()=>(Main.Obj)"(%Main_Obj* %"#temp2")
  %7 = getelementptr %Main_Obj, %Main_Obj* %"#temp2", i32 0, i32 0
  %8 = load i1, i1* %7
  call void @"Main.Obj.~terminate(ref[Main.Obj])"(%Main_Obj* %"#temp2")
  br label %"#block101"

"#block101":                                      ; preds = %"#block98", %"#block100"
  %9 = phi i1 [ %6, %"#block98" ], [ %8, %"#block100" ]
  br i1 %9, label %"#block99", label %"#block102"

"#block102":                                      ; preds = %"#block101", %"#block99"
  ret void
}
------------------------------------------------------------
