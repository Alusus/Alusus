ERROR SPPA1005 @ (16,5): Multiple matches were found for the given callee.
ERROR SPPA1008 @ (17,5): Provided arguments do not match signature.
ERROR SPPA1008 @ (18,5): Provided arguments do not match signature.
ERROR SPPA1008 @ (19,5): Provided arguments do not match signature.
ERROR SPPA1007 @ (20,5): Unknown symbol.
ERROR SPPG1022 @ (5,13): Missing a return statement for a non-void function.
Build Failed...
--------------------- Partial LLVM IR ----------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }

@"#anonymous0" = private constant [6 x i8] c"hello\00"
@"#anonymous1" = private constant [6 x i8] c"hello\00"
@"#anonymous2" = private constant [7 x i8] c"world!\00"
@"#anonymous3" = private constant [6 x i8] c"hello\00"
@"#anonymous4" = private constant [6 x i8] c"world\00"
@"#anonymous5" = private constant [4 x i8] c"...\00"
@"#anonymous6" = private constant [6 x i8] c"hello\00"
@"#anonymous7" = private constant [6 x i8] c"world\00"
@"#anonymous8" = private constant [6 x i8] c"hello\00"
@"#anonymous9" = private constant [6 x i8] c"world\00"
@"#anonymous10" = private constant [6 x i8] c"again\00"
@"#anonymous11" = private constant [6 x i8] c"hello\00"
@"#anonymous12" = private constant [6 x i8] c"hello\00"
@"#anonymous13" = private constant [6 x i8] c"hello\00"
@"#anonymous14" = private constant [6 x i8] c"world\00"
@"#anonymous15" = private constant [4 x i8] c"yet\00"
@"#anonymous16" = private constant [6 x i8] c"again\00"
@"#anonymous17" = private constant [6 x i8] c"hello\00"
@"#anonymous18" = private constant [6 x i8] c"world\00"
@"#anonymous19" = private constant [6 x i8] c"hello\00"
@llvm.global_ctors = appending constant [1 x %LlvmGlobalCtorDtor] [%LlvmGlobalCtorDtor { i32 0, void ()* @__entry__, i32* null }]
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @__entry__() {
"#block0":
  ret void
}

define i32 @"Main.main()=>(Int[32])"() {
"#block1":
  call void (i8*, ...) @"Main.f0(ptr[Word[8]],ArgPack[Int[32],0,0])"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"#anonymous0", i32 0, i32 0))
  call void (i8*, ...) @"Main.f1(ptr[Word[8]],ArgPack[any,0,0])"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"#anonymous1", i32 0, i32 0), [7 x i8]* @"#anonymous2")
  call void (i8*, ...) @"Main.f1(ptr[Word[8]],ArgPack[any,0,0])"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"#anonymous3", i32 0, i32 0), [6 x i8]* @"#anonymous4", [4 x i8]* @"#anonymous5")
  call void (i8*, ...) @"Main.f2(ptr[Word[8]],ArgPack[any,1,0])"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"#anonymous6", i32 0, i32 0), [6 x i8]* @"#anonymous7")
  call void (i8*, ...) @"Main.f3(ptr[Word[8]],ArgPack[ptr[Word[8]],1,2])"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"#anonymous8", i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"#anonymous9", i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"#anonymous10", i32 0, i32 0))
}

define void @"Main.f0(ptr[Word[8]],ArgPack[Int[32],0,0])"(i8* %a, ...) {
"#block2":
  %a1 = alloca i8*
  store i8* %a, i8** %a1
  ret void
}

define void @"Main.f1(ptr[Word[8]],ArgPack[any,0,0])"(i8* %a, ...) {
"#block4":
  %a1 = alloca i8*
  store i8* %a, i8** %a1
  ret void
}

define void @"Main.f2(ptr[Word[8]],ArgPack[any,1,0])"(i8* %a, ...) {
"#block6":
  %a1 = alloca i8*
  store i8* %a, i8** %a1
  ret void
}

define void @"Main.f3(ptr[Word[8]],ArgPack[ptr[Word[8]],1,2])"(i8* %a, ...) {
"#block7":
  %a1 = alloca i8*
  store i8* %a, i8** %a1
  ret void
}

define void @"Main.f1(ptr[Word[8]],ArgPack[Int[32],0,0])"(i8* %a, ...) {
"#block3":
  %a1 = alloca i8*
  store i8* %a, i8** %a1
  ret void
}

define void @"Main.f1(Int[32],ArgPack[any,0,0])"(i32 %a, ...) {
"#block5":
  %a1 = alloca i32
  store i32 %a, i32* %a1
  ret void
}

define void @"Main.f4(ptr[Word[8]],ArgPack[Word[8],0,0])"(i8* %a, ...) {
"#block8":
  %a1 = alloca i8*
  store i8* %a, i8** %a1
  ret void
}
------------------------------------------------------------
