ERROR SPPG1012 @ (53,21): Invalid break steps.
ERROR SPPG1012 @ (54,21): Invalid break steps.
ERROR SPPG1012 @ (66,21): Invalid break steps.
ERROR SPPG1012 @ (67,21): Invalid break steps.
Build Failed...
--------------------- Partial LLVM IR ----------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"

@__anonymous0 = private constant [3 x i8] c"%d\00", align 1
@__anonymous1 = private constant [2 x i8] c"\0A\00", align 1
@__anonymous2 = private constant [3 x i8] c"%d\00", align 1
@__anonymous3 = private constant [2 x i8] c"\0A\00", align 1
@__anonymous4 = private constant [3 x i8] c"%d\00", align 1
@__anonymous5 = private constant [2 x i8] c"\0A\00", align 1
@__anonymous6 = private constant [3 x i8] c"%d\00", align 1
@__anonymous7 = private constant [2 x i8] c"\0A\00", align 1

declare i64 @printf(i8*, ...)

define void @"Main.start()=>(Void)"() {
__block0:
  %i = alloca i32
  %j = alloca i32
  store i32 0, i32* %i
  br label %__block1

__block1:                                         ; preds = %__block6, %__block0
  %0 = load i32, i32* %i
  %1 = icmp slt i32 %0, 10
  br i1 %1, label %__block2, label %__block3

__block2:                                         ; preds = %__block1
  store i32 0, i32* %j
  br label %__block4

__block3:                                         ; preds = %__block1, %__block16
  store i32 0, i32* %i
  br label %__block19

__block4:                                         ; preds = %__block18, %__block2
  %2 = load i32, i32* %j
  %3 = load i32, i32* %i
  %4 = icmp sle i32 %2, %3
  br i1 %4, label %__block5, label %__block6

__block5:                                         ; preds = %__block4
  %5 = load i32, i32* %i
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %__block7, label %__block10

__block6:                                         ; preds = %__block4, %__block12, %__block8
  %7 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__anonymous1, i32 0, i32 0))
  %8 = load i32, i32* %i
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %i
  br label %__block1

__block7:                                         ; preds = %__block5
  %10 = load i32, i32* %j
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %__block8, label %__block9

__block8:                                         ; preds = %__block7
  br label %__block6

__block9:                                         ; preds = %__block7
  br label %__block10

__block10:                                        ; preds = %__block5, %__block9
  %12 = load i32, i32* %i
  %13 = icmp eq i32 %12, 5
  br i1 %13, label %__block11, label %__block14

__block11:                                        ; preds = %__block10
  %14 = load i32, i32* %j
  %15 = icmp eq i32 %14, 2
  br i1 %15, label %__block12, label %__block13

__block12:                                        ; preds = %__block11
  br label %__block6

__block13:                                        ; preds = %__block11
  br label %__block14

__block14:                                        ; preds = %__block10, %__block13
  %16 = load i32, i32* %i
  %17 = icmp eq i32 %16, 8
  br i1 %17, label %__block15, label %__block18

__block15:                                        ; preds = %__block14
  %18 = load i32, i32* %j
  %19 = icmp eq i32 %18, 5
  br i1 %19, label %__block16, label %__block17

__block16:                                        ; preds = %__block15
  br label %__block3

__block17:                                        ; preds = %__block15
  br label %__block18

__block18:                                        ; preds = %__block14, %__block17
  %20 = load i32, i32* %j
  %21 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__anonymous0, i32 0, i32 0), i32 %20)
  %22 = load i32, i32* %j
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %j
  br label %__block4

__block19:                                        ; preds = %__block20, %__block3
  %24 = load i32, i32* %i
  %25 = icmp slt i32 %24, 10
  br i1 %25, label %__block21, label %__block22

__block20:                                        ; preds = %__block26
  %26 = load i32, i32* %i
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %i
  br label %__block19

__block21:                                        ; preds = %__block19
  store i32 0, i32* %j
  br label %__block23

__block22:                                        ; preds = %__block19, %__block36
  store i32 0, i32* %i
  store i32 0, i32* %i
  ret void

__block23:                                        ; preds = %__block24, %__block21
  %28 = load i32, i32* %j
  %29 = load i32, i32* %i
  %30 = icmp sle i32 %28, %29
  br i1 %30, label %__block25, label %__block26

__block24:                                        ; preds = %__block38
  %31 = load i32, i32* %j
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %j
  br label %__block23

__block25:                                        ; preds = %__block23
  %33 = load i32, i32* %i
  %34 = icmp eq i32 %33, 3
  br i1 %34, label %__block27, label %__block30

__block26:                                        ; preds = %__block23, %__block32, %__block28
  %35 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__anonymous3, i32 0, i32 0))
  br label %__block20

__block27:                                        ; preds = %__block25
  %36 = load i32, i32* %j
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %__block28, label %__block29

__block28:                                        ; preds = %__block27
  br label %__block26

__block29:                                        ; preds = %__block27
  br label %__block30

__block30:                                        ; preds = %__block25, %__block29
  %38 = load i32, i32* %i
  %39 = icmp eq i32 %38, 5
  br i1 %39, label %__block31, label %__block34

__block31:                                        ; preds = %__block30
  %40 = load i32, i32* %j
  %41 = icmp eq i32 %40, 2
  br i1 %41, label %__block32, label %__block33

__block32:                                        ; preds = %__block31
  br label %__block26

__block33:                                        ; preds = %__block31
  br label %__block34

__block34:                                        ; preds = %__block30, %__block33
  %42 = load i32, i32* %i
  %43 = icmp eq i32 %42, 8
  br i1 %43, label %__block35, label %__block38

__block35:                                        ; preds = %__block34
  %44 = load i32, i32* %j
  %45 = icmp eq i32 %44, 5
  br i1 %45, label %__block36, label %__block37

__block36:                                        ; preds = %__block35
  br label %__block22

__block37:                                        ; preds = %__block35
  br label %__block38

__block38:                                        ; preds = %__block34, %__block37
  %46 = load i32, i32* %j
  %47 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__anonymous2, i32 0, i32 0), i32 %46)
  br label %__block24

__block39:                                        ; No predecessors!
  %48 = load i32, i32* %i
  %49 = icmp slt i32 %48, 10

__block40:                                        ; No predecessors!
  store i32 0, i32* %j
  %50 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__anonymous5, i32 0, i32 0))
  %51 = load i32, i32* %i
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %i

__block41:                                        ; No predecessors!

__block42:                                        ; No predecessors!
  %53 = load i32, i32* %j
  %54 = load i32, i32* %i
  %55 = icmp sle i32 %53, %54

__block43:                                        ; No predecessors!
  %56 = load i32, i32* %i
  %57 = icmp eq i32 %56, 8
  %58 = load i32, i32* %j
  %59 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__anonymous4, i32 0, i32 0), i32 %58)
  %60 = load i32, i32* %j
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %j

__block44:                                        ; No predecessors!

__block45:                                        ; No predecessors!
  %62 = load i32, i32* %j
  %63 = icmp eq i32 %62, 8
  %64 = load i32, i32* %j
  %65 = icmp eq i32 %64, 9

__block46:                                        ; No predecessors!

__block47:                                        ; No predecessors!

__block48:                                        ; No predecessors!
  %66 = load i32, i32* %i
  %67 = icmp slt i32 %66, 10

__block49:                                        ; No predecessors!
  %68 = load i32, i32* %i
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %i

__block50:                                        ; No predecessors!
  store i32 0, i32* %j
  %70 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @__anonymous7, i32 0, i32 0))

__block51:                                        ; No predecessors!

__block52:                                        ; No predecessors!
  %71 = load i32, i32* %j
  %72 = load i32, i32* %i
  %73 = icmp sle i32 %71, %72

__block53:                                        ; No predecessors!
  %74 = load i32, i32* %j
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %j

__block54:                                        ; No predecessors!
  %76 = load i32, i32* %i
  %77 = icmp eq i32 %76, 8
  %78 = load i32, i32* %j
  %79 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @__anonymous6, i32 0, i32 0), i32 %78)

__block55:                                        ; No predecessors!

__block56:                                        ; No predecessors!
  %80 = load i32, i32* %j
  %81 = icmp eq i32 %80, 8
  %82 = load i32, i32* %j
  %83 = icmp eq i32 %82, 9

__block57:                                        ; No predecessors!

__block58:                                        ; No predecessors!
}
------------------------------------------------------------
