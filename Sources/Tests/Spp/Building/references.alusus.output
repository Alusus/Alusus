-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }

@"!ra" = global [1 x i8]* null
@"#anonymous0" = private constant [26 x i8] c"Reference as pointer. %s\0A\00"
@llvm.global_ctors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @"useRefAsPtr()"() {
"#block0":
  %0 = call i8* @malloc(i64 10)
  %1 = bitcast i8* %0 to [1 x i8]*
  store [1 x i8]* %1, [1 x i8]** @"!ra"
  %2 = load [1 x i8]*, [1 x i8]** @"!ra"
  %3 = getelementptr [1 x i8], [1 x i8]* %2, i32 0, i64 0
  store i8 97, i8* %3
  %4 = load [1 x i8]*, [1 x i8]** @"!ra"
  %5 = call i32 ([1 x i8]*, ...) @printf([1 x i8]* bitcast ([26 x i8]* @"#anonymous0" to [1 x i8]*), [1 x i8]* %4)
  ret void
}

declare i8* @malloc(i64)

declare i32 @printf([1 x i8]*, ...)
------------------------------------------------------------
-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }

@"!a" = global [10 x i8] zeroinitializer
@"#anonymous0" = private constant [30 x i8] c"Pass reference to object. %s\0A\00"
@"!ra" = global [1 x i8]* null
@"#anonymous1" = private constant [53 x i8] c"Pass reference to object from another reference. %s\0A\00"
@llvm.global_ctors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @"passRefToValue()"() {
"#block0":
  call void @"updateString(ref[array[Word[8],1]])"([1 x i8]* bitcast ([10 x i8]* @"!a" to [1 x i8]*))
  %0 = call i32 ([1 x i8]*, ...) @printf([1 x i8]* bitcast ([30 x i8]* @"#anonymous0" to [1 x i8]*), [10 x i8]* @"!a")
  %1 = load [1 x i8]*, [1 x i8]** @"!ra"
  call void @"updateString(ref[array[Word[8],1]])"([1 x i8]* %1)
  %2 = load [1 x i8]*, [1 x i8]** @"!ra"
  %3 = call i32 ([1 x i8]*, ...) @printf([1 x i8]* bitcast ([53 x i8]* @"#anonymous1" to [1 x i8]*), [1 x i8]* %2)
  ret void
}

define void @"updateString(ref[array[Word[8],1]])"([1 x i8]* %str) {
"#block1":
  %str1 = alloca [1 x i8]*
  store [1 x i8]* %str, [1 x i8]** %str1
  %0 = load [1 x i8]*, [1 x i8]** %str1
  %1 = getelementptr [1 x i8], [1 x i8]* %0, i32 0, i64 0
  store i8 115, i8* %1
  ret void
}

declare i32 @printf([1 x i8]*, ...)
------------------------------------------------------------
-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }

@"!rb" = global [1 x i8]* null
@"#anonymous0" = private constant [6 x i8] c"hello\00"
@"#anonymous1" = private constant [43 x i8] c"Before passing reference to reference. %s\0A\00"
@"#anonymous2" = private constant [42 x i8] c"After passing reference to reference. %s\0A\00"
@"#anonymous3" = private constant [6 x i8] c"world\00"
@llvm.global_ctors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @"passRefToRefToValue()"() {
"#block0":
  store [1 x i8]* bitcast ([6 x i8]* @"#anonymous0" to [1 x i8]*), [1 x i8]** @"!rb"
  %0 = load [1 x i8]*, [1 x i8]** @"!rb"
  %1 = call i32 ([1 x i8]*, ...) @printf([1 x i8]* bitcast ([43 x i8]* @"#anonymous1" to [1 x i8]*), [1 x i8]* %0)
  call void @"replaceString(ref[ref[array[Word[8],1]]])"([1 x i8]** @"!rb")
  %2 = load [1 x i8]*, [1 x i8]** @"!rb"
  %3 = call i32 ([1 x i8]*, ...) @printf([1 x i8]* bitcast ([42 x i8]* @"#anonymous2" to [1 x i8]*), [1 x i8]* %2)
  ret void
}

declare i32 @printf([1 x i8]*, ...)

define void @"replaceString(ref[ref[array[Word[8],1]]])"([1 x i8]** %str) {
"#block1":
  %str1 = alloca [1 x i8]**
  store [1 x i8]** %str, [1 x i8]*** %str1
  %0 = load [1 x i8]**, [1 x i8]*** %str1
  store [1 x i8]* bitcast ([6 x i8]* @"#anonymous3" to [1 x i8]*), [1 x i8]** %0
  ret void
}
------------------------------------------------------------
-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }

@"#anonymous0" = private constant [32 x i8] c"Reference to function pointer.\0A\00"
@llvm.global_ctors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @"testFnRef1()"() {
"#block0":
  %pf = alloca void ()*
  %rf = alloca void ()**
  store void ()** %pf, void ()*** %rf
  %0 = load void ()**, void ()*** %rf
  store void ()* @"printMessage()", void ()** %0
  %1 = load void ()**, void ()*** %rf
  %2 = load void ()*, void ()** %1
  call void %2()
  %3 = load void ()*, void ()** %pf
  call void %3()
  ret void
}

define void @"printMessage()"() {
"#block1":
  %0 = call i32 ([1 x i8]*, ...) @printf([1 x i8]* bitcast ([32 x i8]* @"#anonymous0" to [1 x i8]*))
  ret void
}

declare i32 @printf([1 x i8]*, ...)
------------------------------------------------------------
-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }

@"#anonymous0" = private constant [32 x i8] c"Reference to function pointer.\0A\00"
@llvm.global_ctors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @"testFnRef2()"() {
"#block0":
  %pf = alloca void ()*
  call void @"getFn(ref[ptr[()]])"(void ()** %pf)
  %0 = load void ()*, void ()** %pf
  call void %0()
  ret void
}

define void @"getFn(ref[ptr[()]])"(void ()** %fn) {
"#block1":
  %fn1 = alloca void ()**
  store void ()** %fn, void ()*** %fn1
  %0 = load void ()**, void ()*** %fn1
  store void ()* @"printMessage()", void ()** %0
  ret void
}

define void @"printMessage()"() {
"#block2":
  %0 = call i32 ([1 x i8]*, ...) @printf([1 x i8]* bitcast ([32 x i8]* @"#anonymous0" to [1 x i8]*))
  ret void
}

declare i32 @printf([1 x i8]*, ...)
------------------------------------------------------------
-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }

@"!ri" = global i32* null
@"!i" = global i32 0
@"#anonymous0" = private constant [4 x i8] c"%d\0A\00"
@llvm.global_ctors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @"passRefAsPtr()"() {
"#block0":
  store i32* @"!i", i32** @"!ri"
  store i32 5, i32* @"!i"
  %0 = load i32*, i32** @"!ri"
  call void @"printNumPtr(ptr[Int[32]])"(i32* %0)
  ret void
}

define void @"printNumPtr(ptr[Int[32]])"(i32* %pn) {
"#block1":
  %pn1 = alloca i32*
  store i32* %pn, i32** %pn1
  %0 = load i32*, i32** %pn1
  %1 = load i32, i32* %0
  %2 = call i32 ([1 x i8]*, ...) @printf([1 x i8]* bitcast ([4 x i8]* @"#anonymous0" to [1 x i8]*), i32 %1)
  ret void
}

declare i32 @printf([1 x i8]*, ...)
------------------------------------------------------------
-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }

@"!rri" = global i32** null
@"!ri" = global i32* null
@"#anonymous0" = private constant [4 x i8] c"%d\0A\00"
@llvm.global_ctors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @"passRefRefAsPtrPtr()"() {
"#block0":
  store i32** @"!ri", i32*** @"!rri"
  %0 = load i32**, i32*** @"!rri"
  call void @"printNumPtrPtr(ptr[ptr[Int[32]]])"(i32** %0)
  ret void
}

define void @"printNumPtrPtr(ptr[ptr[Int[32]]])"(i32** %pn) {
"#block1":
  %pn1 = alloca i32**
  store i32** %pn, i32*** %pn1
  %0 = load i32**, i32*** %pn1
  %1 = load i32*, i32** %0
  %2 = load i32, i32* %1
  %3 = call i32 ([1 x i8]*, ...) @printf([1 x i8]* bitcast ([4 x i8]* @"#anonymous0" to [1 x i8]*), i32 %2)
  ret void
}

declare i32 @printf([1 x i8]*, ...)
------------------------------------------------------------
-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }

@"!rri" = global i32** null
@"#anonymous0" = private constant [4 x i8] c"%d\0A\00"
@llvm.global_ctors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @"getObjectFromRefRef()"() {
"#block0":
  %0 = load i32**, i32*** @"!rri"
  %1 = load i32*, i32** %0
  %2 = load i32, i32* %1
  call void @"printNum(Int[32])"(i32 %2)
  ret void
}

define void @"printNum(Int[32])"(i32 %n) {
"#block1":
  %n1 = alloca i32
  store i32 %n, i32* %n1
  %0 = load i32, i32* %n1
  %1 = call i32 ([1 x i8]*, ...) @printf([1 x i8]* bitcast ([4 x i8]* @"#anonymous0" to [1 x i8]*), i32 %0)
  ret void
}

declare i32 @printf([1 x i8]*, ...)
------------------------------------------------------------
-------------------- Generated LLVM IR ---------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }
%A = type { i32 }

@"#anonymous0" = private constant [4 x i8] c"%d\0A\00"
@"#anonymous1" = private constant [4 x i8] c"%d\0A\00"
@"#anonymous2" = private constant [8 x i8] c"%d, %d\0A\00"
@"#anonymous3" = private constant [8 x i8] c"A~init\0A\00"
@"#anonymous4" = private constant [13 x i8] c"A~terminate\0A\00"
@llvm.global_ctors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @"testDeref()"() {
"#block0":
  %ra = alloca %A**
  %0 = call i8* @malloc(i64 8)
  %1 = bitcast i8* %0 to %A**
  store %A** %1, %A*** %ra
  %2 = load %A**, %A*** %ra
  %3 = call i8* @malloc(i64 4)
  %4 = bitcast i8* %3 to %A*
  store %A* %4, %A** %2
  %5 = load %A**, %A*** %ra
  %6 = load %A*, %A** %5
  call void @"A.~init(iref[A])"(%A* %6)
  %7 = load %A**, %A*** %ra
  %8 = load %A*, %A** %7
  %9 = getelementptr %A, %A* %8, i32 0, i32 0
  %10 = load i32, i32* %9
  %11 = call i32 ([1 x i8]*, ...) @printf([1 x i8]* bitcast ([4 x i8]* @"#anonymous0" to [1 x i8]*), i32 %10)
  %12 = load %A**, %A*** %ra
  %13 = load %A*, %A** %12
  call void @"A.~terminate(iref[A])"(%A* %13)
  %i = alloca i32
  %ri = alloca i32*
  store i32* %i, i32** %ri
  store i32 13, i32* %i
  %14 = load i32*, i32** %ri
  %15 = load i32, i32* %14
  %16 = call i32 ([1 x i8]*, ...) @printf([1 x i8]* bitcast ([4 x i8]* @"#anonymous1" to [1 x i8]*), i32 %15)
  %17 = call i32 ([1 x i8]*, ...) @printf([1 x i8]* bitcast ([8 x i8]* @"#anonymous2" to [1 x i8]*), i32 4, i32 8)
  ret void
}

declare i8* @malloc(i64)

define void @"A.~init(iref[A])"(%A* %this) {
"#block1":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = load %A*, %A** %this1
  %1 = getelementptr %A, %A* %0, i32 0, i32 0
  store i32 7, i32* %1
  %2 = call i32 ([1 x i8]*, ...) @printf([1 x i8]* bitcast ([8 x i8]* @"#anonymous3" to [1 x i8]*))
  ret void
}

declare i32 @printf([1 x i8]*, ...)

define void @"A.~terminate(iref[A])"(%A* %this) {
"#block2":
  %this1 = alloca %A*
  store %A* %this, %A** %this1
  %0 = call i32 ([1 x i8]*, ...) @printf([1 x i8]* bitcast ([13 x i8]* @"#anonymous4" to [1 x i8]*))
  ret void
}
------------------------------------------------------------
ERROR SPPG1015 @ (197,3): Incompatible types for the given operator.
ERROR SPPG1015 @ (198,3): Incompatible types for the given operator.
ERROR SPPG1015 @ (199,3): Incompatible types for the given operator.
ERROR SPPG1015 @ (200,3): Incompatible types for the given operator.
ERROR SPPG1033 @ (202,3): Invalid operand for ~deref operator.
Build Failed...
--------------------- Partial LLVM IR ----------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }

@"!i" = global i32 0
@"!rri" = global i32** null
@"!ri" = global i32* null
@"#anonymous0" = private constant [4 x i8] c"abc\00"
@llvm.global_ctors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @"errorCases()"() {
"#block0":
  %rf = alloca float*
  %0 = load i32*, i32** @"!ri"
  %1 = load i32, i32* %0
  %2 = load float*, float** %rf
  %3 = load float*, float** %rf
  store float 5.000000e+00, float* %3
  %4 = load i32, i32* @"!i"
  ret void
}
------------------------------------------------------------
