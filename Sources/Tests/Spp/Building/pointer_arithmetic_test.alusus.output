[0;31mERROR SPPG1015: Incompatible types for the given operator.[0m
  pointer_arithmetic_test.alusus (16,15)
[0;31mERROR SPPG1015: Incompatible types for the given operator.[0m
  pointer_arithmetic_test.alusus (17,15)
[0;31mERROR SPPG1015: Incompatible types for the given operator.[0m
  pointer_arithmetic_test.alusus (18,15)
[0;31mERROR SPPG1015: Incompatible types for the given operator.[0m
  pointer_arithmetic_test.alusus (19,15)
Build Failed...
--------------------- Partial LLVM IR ----------------------
; ModuleID = 'AlususProgram'
source_filename = "AlususProgram"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

%LlvmGlobalCtorDtor = type { i32, void ()*, i32* }

@"#anonymous0" = private constant [7 x i8] c"Alusus\00"
@llvm.global_ctors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer
@llvm.global_dtors = appending constant [0 x %LlvmGlobalCtorDtor] zeroinitializer

define void @"test()"() {
"#block0":
  %p = alloca i8*
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"#anonymous0", i32 0, i32 0), i8** %p
  %0 = load i8*, i8** %p
  %1 = getelementptr i8, i8* %0, i32 5
  %2 = load i8, i8* %1
  call void @"takeChar(Word[8])"(i8 %2)
  %p2 = alloca i8*
  %3 = load i8*, i8** %p
  %4 = getelementptr i8, i8* %3, i64 5
  store i8* %4, i8** %p2
  %5 = load i8*, i8** %p2
  %6 = getelementptr i8, i8* %5, i8 -3
  %7 = load i8, i8* %6
  call void @"takeChar(Word[8])"(i8 %7)
  %8 = load i8*, i8** %p
  %9 = load i8*, i8** %p
  %10 = load i8*, i8** %p
  %11 = load i8*, i8** %p
  ret void
}

define void @"takeChar(Word[8])"(i8 %c) {
"#block1":
  %c1 = alloca i8
  store i8 %c, i8* %c1
  ret void
}
------------------------------------------------------------
