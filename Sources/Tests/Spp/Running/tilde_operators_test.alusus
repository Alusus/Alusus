import "alusus_spp";

def Main: module
{
  def print: @expname[printf] function (fmt: ptr[Word[8]], args: ...any)=>Int[64];

  def start: function ()=>Void
  {
    testPtrAndCnt();
    print("\n");
    testCast();
    print("\n");
    testSize();
  };

  def testPtrAndCnt: function ()=>Void
  {
    print("Testing ~ptr and ~cnt:\n");

    def i: Int[32];
    def pi: ptr[Int[32]];
    def ppi: ptr[ptr[Int[32]]];

    pi = i~ptr;
    pi~cnt = 5;

    print("i = %d\n", i);

    i = 10;
    print("pi~cnt = %d\n", pi~cnt);

    ppi = pi~ptr;

    i = 15;
    print("ppi~cnt~cnt = %d\n", ppi~cnt~cnt);

    ppi~cnt~cnt = 20;
    print("i = %d\n", i);
  };

  def testCast: function ()=>Void
  {
    print("Testing ~cast:\n");

    def i: Int[32];
    def l: Int[64];
    def ptrI: Int[0];
    def f: Float[32];
    def pi: ptr[Int[32]];
    def pi2: ptr[Int[32]];

    i = 257;
    print("i = %d\n", i);
    l = i~cast[Int[8]];
    print("l = i~cast[Int[8]] => l = %ld\n", l);
    f = 5.6;
    print("f = %f\n", f);
    print("f~cast[Float[64]] = %f\n", f~cast[Float[64]]);

    pi = i~ptr;
    pi~cnt = 1024;
    print("i = %d\n", i);
    pi~cast[ptr[Int[8]]]~cnt = 1i8;
    print("i = %d\n", i);
    i~ptr~cast[ptr[Int[8]]]~cnt = 2i8;
    print("i = %d\n", i);
    print("pi~cast[ptr[Int[8]]]~cnt = %d\n", pi~cast[ptr[Int[8]]]~cnt);
    l = pi~cnt~cast[Int[8]];
    print("l = pi~cnt~cast[Int[8]] => l = %ld\n", l);

    l = pi~cast[Int[0]];
    pi2 = l~cast[Int[0]]~cast[ptr[Int[32]]];
    pi2~cnt = 543;
    print("i~ptr -> l -> pi2 => pi2~cnt = 543 => i = %d\n", i);

    ptrI = pi~cast[Int[0]];
    pi2 = ptrI~cast[ptr[Int[32]]];
    pi2~cnt = 543;
    print("i~ptr -> ptrI -> pi2 => pi2~cnt = 543 => i = %d\n", i);
  };

  def testSize: function ()=>Void
  {
    def i: Int[32];
    def pi: ptr[Int[32]];
    def ptrI: Int[0];
    print("i~size = %d\n", i~size);
    print("pi~size = %d\n", pi~size);
    print("5 + i~size = %d\n", 5 + i~size);
    print("5~size = %d\n", 5~size);
    print("(i + 5i64)~size = %d\n", (i + 5i64)~size);
    print("Int[32]~size = %d\n", Int[32]~size);
    print("Int[64]~size = %d\n", Int[64]~size);
    print("ptr[Int[32]]~size = %d\n", ptr[Int[32]]~size);
    print("ptrI~size = %d\n", ptrI~size);
    print("Int[0]~size = %d\n", Int[0]~size);
  };
};

Main.start();
