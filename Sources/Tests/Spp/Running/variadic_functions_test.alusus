import "Srl/Console.alusus";

func test (pairCount: Int[32], vArgs: ...any) {
    def i: int;
    while (pairCount > 0) {
        def iarg: Int = vArgs~next_arg[Int];
        def farg: Float = vArgs~next_arg[Float];
        Srl.Console.print("%d, %f\n", iarg, farg~cast[Float[64]]);
        --pairCount;
    }
}

test(3, 6, 7.3, 18, 9.7, 1, 110.1);

func sum (count: Int, args: ...Int): Int {
    def r: Int = 0;
    while count-- > 0 r += args~next_arg[Int];
    return r;
}

class A {
    def i: Int;
    handler this~init() { this.i = 7 };
    handler this~init(n: Int) { this.i = n };
    handler this~cast[Int] { return this.i };
};

Srl.Console.print("%d\n", sum({ 4, 2, 3, 6 }));
Srl.Console.print("%d\n", sum({ 4, 2; 3, 6 }));
Srl.Console.print("%d\n", sum({}));

Srl.Console.print("%d\n", sum({ 4, A(), 3 }));

func sumA(count: Int, args: ...A): Int {
    def r: Int = 0;
    while count-- > 0 r += args~next_arg[A].i;
    return r;
}
Srl.Console.print("%d\n", sumA({ A(12), A(23), A(3) }));

Srl.Console.print("%d\n", sum({ 4, A(), "wrong" }));
