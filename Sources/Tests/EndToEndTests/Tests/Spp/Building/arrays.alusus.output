ERROR SPP1309 @ (46,13): Value is not implicitly castable to target type.
ERROR SPP1309 @ (47,14): Value is not implicitly castable to target type.
ERROR SPP1106 @ (48,5): No matches were found for the given callee.
ERROR SPP1106 @ (49,5): No matches were found for the given callee.
ERROR SPP1106 @ (50,5): No matches were found for the given callee.
Build Failed...
--------------------- Partial LLVM IR ----------------------
; ModuleID = 'AlususProgram'
target datalayout = "E-p:64:64:64-S0-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f16:16:16-f32:32:32-f64:64:64-f128:128:128-v64:64:64-v128:128:128-a0:0:64"

%Main_T = type { i32, i32 }
%Main_TA = type { i32, [4 x i32] }

@__anonymous0 = private constant [13 x i8] c"hello world!\00", align 1
@__anonymous1 = private constant [4 x i8] c"%d\0A\00", align 1
@__anonymous2 = private constant [4 x i8] c"%d\0A\00", align 1
@__anonymous3 = private constant [4 x i8] c"%s\0A\00", align 1
@__anonymous4 = private constant [4 x i8] c"%f\0A\00", align 1
@__anonymous5 = private constant [4 x i8] c"%d\0A\00", align 1
@__anonymous6 = private constant [4 x i8] c"%d\0A\00", align 1

declare i64 @printf(i8*, ...)

define void @Main_start_____Void_() {
__block0:
  %ai = alloca [5 x i32]
  %aai = alloca [3 x [5 x i32]]
  %apc = alloca [4 x i8*]
  %af = alloca [7 x double]
  %at = alloca [9 x %Main_T]
  %ta = alloca %Main_TA
  %0 = getelementptr [5 x i32]* %ai, i32 0, i64 2
  store i32 5, i32* %0
  %1 = getelementptr [3 x [5 x i32]]* %aai, i32 0, i64 2
  %2 = getelementptr [5 x i32]* %1, i32 0, i64 4
  store i32 23, i32* %2
  %3 = getelementptr [4 x i8*]* %apc, i32 0, i64 1
  store i8* getelementptr inbounds ([13 x i8]* @__anonymous0, i64 0, i64 0), i8** %3
  %4 = getelementptr [7 x double]* %af, i32 0, i64 0
  store double 0x3FF3333340000000, double* %4
  %5 = getelementptr [9 x %Main_T]* %at, i32 0, i64 7
  %6 = getelementptr %Main_T* %5, i32 0, i32 1
  store i32 43, i32* %6
  %7 = getelementptr %Main_TA* %ta, i32 0, i32 1
  %8 = getelementptr [4 x i32]* %7, i32 0, i64 3
  store i32 89, i32* %8
  %9 = getelementptr [5 x i32]* %ai, i32 0, i64 2
  %10 = load i32* %9
  %11 = call i64 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @__anonymous1, i64 0, i64 0), i32 %10)
  %12 = getelementptr [3 x [5 x i32]]* %aai, i32 0, i64 2
  %13 = getelementptr [5 x i32]* %12, i32 0, i64 4
  %14 = load i32* %13
  %15 = call i64 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @__anonymous2, i64 0, i64 0), i32 %14)
  %16 = getelementptr [4 x i8*]* %apc, i32 0, i64 1
  %17 = load i8** %16
  %18 = call i64 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @__anonymous3, i64 0, i64 0), i8* %17)
  %19 = getelementptr [7 x double]* %af, i32 0, i64 0
  %20 = load double* %19
  %21 = call i64 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @__anonymous4, i64 0, i64 0), double %20)
  %22 = getelementptr [9 x %Main_T]* %at, i32 0, i64 7
  %23 = getelementptr %Main_T* %22, i32 0, i32 1
  %24 = load i32* %23
  %25 = call i64 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @__anonymous5, i64 0, i64 0), i32 %24)
  %26 = getelementptr %Main_TA* %ta, i32 0, i32 1
  %27 = getelementptr [4 x i32]* %26, i32 0, i64 3
  %28 = load i32* %27
  %29 = call i64 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @__anonymous6, i64 0, i64 0), i32 %28)
  %30 = getelementptr [5 x i32]* %ai, i32 0, i64 2
  %31 = getelementptr [3 x [5 x i32]]* %aai, i32 0, i64 0
}
------------------------------------------------------------
