import "libalusus_spp.so";

def Main: module
{
  def print: @expname[printf] function (fmt: ptr[Int[8]], args: ...any)=>Int[64];

  def float32ToFloat64 : function (f: Float[32])=>Float[64]
  {
    return f;
  };

  def i8Toi32: function (i: Int[8])=>Int[32]
  {
    return i;
  };

  def i16Toi32: function (i: Int[16])=>Int[32]
  {
    return i;
  };

  def MyPoint: type
  {
    def x: Int[32];
    def y: Int[32];
    def s: Float[32];
  };

  def MyNested: type
  {
    def p: MyPoint;
    def i: Int[8];
    def j: Int[16];
  };

  def start: function ()=>Void
  {
    def p: MyPoint;
    def n: MyNested;

    p.x = 5;
    p.y = 6;
    p.s = 1.2;

    n.i = 8i8;
    n.j = 9i8;
    n.p.x = 3;

    n.p = p;

    print("p.x=%d\n", p.x);
    print("p.y=%d\n", p.y);
    print("p.s=%f\n", float32ToFloat64(p.s));

    print("n.p.x=%d\n", n.p.x);
    print("n.p.y=%d\n", n.p.y);
    print("n.p.s=%f\n", float32ToFloat64(n.p.s));
    print("n.i=%d\n", i8Toi32(n.i));
    print("n.j=%d\n", i16Toi32(n.j));
  }
};

run Main.start;
