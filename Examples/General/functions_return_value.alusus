import "common.alusus";

def FunctionsReturnValue : module {
  def add_ints : function (a : int, b : int) => int {
    return a + b;
  };

  // TODO: I wanted to implement add_floats, but I couldn't because binary
  // operators are currently only implemented for integers.
  // TODO: The function return_same was initially implemented for floats
  // but printf and the like functions expect all floating point values to be
  // of type double, hence I couldn't print the values. If you are wondering how
  // they work in C/C++, the answer is that they get implicitly converted to
  // doubles
  def return_same : function (a : double) => double {
    return a;
  };

  def main : function() {
    printf("%d\n", add_ints(1, 2));
    printf("%d\n", add_ints(1234, 5678));
    printf("%g\n", return_same(1.2));
    printf("%g\n", return_same(12.34));
  }
};

run FunctionsReturnValue;
