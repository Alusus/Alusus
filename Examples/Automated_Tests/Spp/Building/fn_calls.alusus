import "libalusus_spp.so";

def Main: module
{
  def main: function (a: Int[64], b: Float[64])=>Int[64] {
    // printf("Hello World!");
    g();
    h("hello world");
    h("hello", "world");
    Other.f(5);
    Other.f("hello");
    Other.f(5.3);
    Other.invalid();
    Other.Nested.g();
    Other.Nested.f();
    f(5, Other);
  };

  def f: function (a: Int[32], b: Float[32])=>Int[64] {
  };

  def g: function ()=>Int[32] {
  };

  def h: function (a: ptr[Int[8]])=>Int[32] {
  };

  def h: @expname[hh] function (a: ptr[Int[8]], b: ptr[Int[8]])=>Int[32] {
  };

  def subModule: module
  {
    def start: function ()=>Void {
      g();
    };
    def g: function ()=>Int[32] {
      return 20;
    };
  };
};

def Other: module
{
  def f: function (a: Int[32]) => Int[64]
  {
  };

  def f: function (a: ptr[Int[8]]) => Int[64]
  {
  };

  def Nested: module
  {
    def g: function () => Void
    {
    };
  }
};

dump_llvm_ir Main;
